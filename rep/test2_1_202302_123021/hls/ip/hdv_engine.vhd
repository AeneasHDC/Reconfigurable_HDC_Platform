-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hdv_engine is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    nrst_i : IN STD_LOGIC_VECTOR (0 downto 0);
    op_mode_i : IN STD_LOGIC_VECTOR (0 downto 0);
    frame_in : IN STD_LOGIC_VECTOR (47 downto 0);
    sdata_i_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    sdata_i_TVALID : IN STD_LOGIC;
    sdata_i_TREADY : OUT STD_LOGIC;
    sdata_i_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    sdata_i_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    sdata_i_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sdata_i_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    sdata_i_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    sdata_i_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    chv_i : IN STD_LOGIC_VECTOR (99 downto 0);
    bhv_i : IN STD_LOGIC_VECTOR (99 downto 0);
    lhv_i : IN STD_LOGIC_VECTOR (99 downto 0);
    pred_class_o : OUT STD_LOGIC_VECTOR (4 downto 0);
    status_o : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of hdv_engine is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hdv_engine_hdv_engine,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.404500,HLS_SYN_LAT=209,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=2324,HLS_SYN_LUT=14143,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (109 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (109 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (109 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (109 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (109 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (109 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (109 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (109 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (109 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (109 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (109 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (109 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv7_43 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_45 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_4F : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_53 : STD_LOGIC_VECTOR (6 downto 0) := "1010011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv7_56 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv7_59 : STD_LOGIC_VECTOR (6 downto 0) := "1011001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv7_5C : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_const_lv7_5D : STD_LOGIC_VECTOR (6 downto 0) := "1011101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv7_5E : STD_LOGIC_VECTOR (6 downto 0) := "1011110";
    constant ap_const_lv7_5F : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv7_62 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_14 : STD_LOGIC_VECTOR (9 downto 0) := "0000010100";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (109 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_lhv_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lhv_ce0 : STD_LOGIC;
    signal p_lhv_we0 : STD_LOGIC;
    signal p_lhv_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lhv_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lhv_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lhv_ce1 : STD_LOGIC;
    signal p_lhv_we1 : STD_LOGIC;
    signal p_lhv_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lhv_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bhv_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_bhv_ce0 : STD_LOGIC;
    signal p_bhv_we0 : STD_LOGIC;
    signal p_bhv_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bhv_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bhv_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_bhv_ce1 : STD_LOGIC;
    signal p_bhv_we1 : STD_LOGIC;
    signal p_bhv_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_bhv_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal BundledHV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal BundledHV_ce0 : STD_LOGIC;
    signal BundledHV_we0 : STD_LOGIC;
    signal BundledHV_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal BundledHV_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal BundledHV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal BundledHV_ce1 : STD_LOGIC;
    signal BundledHV_we1 : STD_LOGIC;
    signal BundledHV_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal Encoded_HV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Encoded_HV_ce0 : STD_LOGIC;
    signal Encoded_HV_we0 : STD_LOGIC;
    signal Encoded_HV_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Encoded_HV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal Encoded_HV_ce1 : STD_LOGIC;
    signal Encoded_HV_we1 : STD_LOGIC;
    signal Encoded_HV_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_chv_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_chv_ce0 : STD_LOGIC;
    signal p_chv_we0 : STD_LOGIC;
    signal p_chv_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_chv_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_chv_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_chv_ce1 : STD_LOGIC;
    signal p_chv_we1 : STD_LOGIC;
    signal p_chv_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_chv_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal similarity_classes_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal similarity_classes_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal similarity_classes_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_pred_class_o : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal sdata_i_TDATA_blk_n : STD_LOGIC;
    signal tmp_nbreadreq_fu_928_p9 : STD_LOGIC_VECTOR (0 downto 0);
    signal frame_in_type_fu_1383_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal frame_in_type_reg_3964 : STD_LOGIC_VECTOR (1 downto 0);
    signal frame_in_index_reg_3970 : STD_LOGIC_VECTOR (9 downto 0);
    signal frame_in_id_reg_3978 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_3987 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_3992 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_3997 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_4002 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_4007 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_4012 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_4017 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_4022 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_4027 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_4032 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_4037 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_4042 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_4047 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_4052 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_4057 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_4062 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_4067 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_4072 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_4077 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_4082 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_4087 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_4092 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_4097 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_4102 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_4107 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_4112 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_4117 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_4122 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_4127 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_4132 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_4137 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_4142 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_4147 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_4152 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_4157 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_4162 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_4167 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_4172 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_4177 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_4182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_4187 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_4192 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_4197 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_4202 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_4207 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_4212 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_4217 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_4222 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_4227 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_4232 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_4237 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_4242 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_4247 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_4252 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_4257 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_4262 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_4267 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_4272 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_4277 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_4282 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_4287 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_4292 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_4297 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_4302 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_4307 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_4312 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_4317 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_reg_4322 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_4327 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_4332 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_4337 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_reg_4342 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_4347 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_4352 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_4357 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_4362 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_reg_4367 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_4372 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_4377 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_reg_4382 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_4387 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_reg_4392 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_4397 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_4402 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_4407 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_reg_4412 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_4417 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_reg_4422 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_reg_4427 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_4432 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_4437 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_4442 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_reg_4447 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_reg_4452 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_4457 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_4462 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_reg_4467 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_reg_4472 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_reg_4477 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_reg_4482 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_reg_4487 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_reg_4492 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_4497 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_reg_4502 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_reg_4507 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_reg_4512 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_reg_4517 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_reg_4522 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_reg_4527 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_reg_4532 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_reg_4537 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_reg_4542 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_reg_4547 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_reg_4552 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_reg_4557 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_reg_4562 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_reg_4567 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_reg_4572 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_reg_4577 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_reg_4582 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_reg_4587 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_reg_4592 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_reg_4597 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_reg_4602 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_reg_4607 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_reg_4612 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_reg_4617 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_reg_4622 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_reg_4627 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_4632 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_4637 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_reg_4642 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_reg_4647 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_reg_4652 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_reg_4657 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_reg_4662 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_reg_4667 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_reg_4672 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_reg_4677 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_reg_4682 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_reg_4687 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_144_reg_4692 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_reg_4697 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_146_reg_4702 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_reg_4707 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_reg_4712 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_149_reg_4717 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_150_reg_4722 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_151_reg_4727 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_reg_4732 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_153_reg_4737 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_reg_4742 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_155_reg_4747 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_156_reg_4752 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_4757 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_reg_4762 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_reg_4767 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_160_reg_4772 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_161_reg_4777 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_162_reg_4782 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_4787 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_164_reg_4792 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_reg_4797 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_reg_4802 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_reg_4807 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_168_reg_4812 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_169_reg_4817 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_reg_4822 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_171_reg_4827 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_172_reg_4832 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_173_reg_4837 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_174_reg_4842 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_175_reg_4847 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_reg_4852 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_177_reg_4857 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_178_reg_4862 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_179_reg_4867 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_180_reg_4872 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_reg_4877 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_182_reg_4882 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_183_reg_4887 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_184_reg_4892 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_185_reg_4897 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_186_reg_4902 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_187_reg_4907 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_188_reg_4912 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_189_reg_4917 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_reg_4922 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_reg_4927 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_reg_4932 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_reg_4937 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_194_reg_4942 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_195_reg_4947 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_196_reg_4952 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_reg_4957 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_198_reg_4962 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln210_fu_3003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln210_reg_4967 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal icmp_ln218_fu_3008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_reg_4972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal and_ln245_fu_3018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln245_reg_4976 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal tmp_200_reg_4983 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal and_ln255_fu_3033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_201_reg_4988 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_202_reg_4993 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_203_reg_4998 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_204_reg_5003 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_reg_5008 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_206_reg_5013 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_207_reg_5018 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_208_reg_5023 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_209_reg_5028 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_210_reg_5033 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_211_reg_5038 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_212_reg_5043 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_213_reg_5048 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_214_reg_5053 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_215_reg_5058 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_216_reg_5063 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_217_reg_5068 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_218_reg_5073 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_219_reg_5078 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_220_reg_5083 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_221_reg_5088 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_222_reg_5093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_223_reg_5098 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_224_reg_5103 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_225_reg_5108 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_226_reg_5113 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_227_reg_5118 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_228_reg_5123 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_229_reg_5128 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_230_reg_5133 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_231_reg_5138 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_232_reg_5143 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_233_reg_5148 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_234_reg_5153 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_235_reg_5158 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_236_reg_5163 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_237_reg_5168 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_238_reg_5173 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_239_reg_5178 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_240_reg_5183 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_241_reg_5188 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_242_reg_5193 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_reg_5198 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_244_reg_5203 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_reg_5208 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_246_reg_5213 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_247_reg_5218 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_248_reg_5223 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_249_reg_5228 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_reg_5233 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_251_reg_5238 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_252_reg_5243 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_reg_5248 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_254_reg_5253 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_255_reg_5258 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_256_reg_5263 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_257_reg_5268 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_258_reg_5273 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_259_reg_5278 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_260_reg_5283 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_261_reg_5288 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_262_reg_5293 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_263_reg_5298 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_264_reg_5303 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_265_reg_5308 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_266_reg_5313 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_267_reg_5318 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_268_reg_5323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_reg_5328 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_270_reg_5333 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_271_reg_5338 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_272_reg_5343 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_reg_5348 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_reg_5353 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_275_reg_5358 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_276_reg_5363 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_reg_5368 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_278_reg_5373 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_279_reg_5378 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_reg_5383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_281_reg_5388 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_reg_5393 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_reg_5398 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_reg_5403 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_285_reg_5408 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_286_reg_5413 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_287_reg_5418 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_288_reg_5423 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_reg_5428 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_290_reg_5433 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_291_reg_5438 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_292_reg_5443 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_reg_5448 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_reg_5453 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_reg_5458 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_reg_5463 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_reg_5468 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_5473 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln278_fu_3929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln278_reg_5482 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal similarity_classes_2_load_1_reg_5486 : STD_LOGIC_VECTOR (31 downto 0);
    signal similarity_classes_0_load_1_reg_5491 : STD_LOGIC_VECTOR (31 downto 0);
    signal similarity_classes_1_load_1_reg_5496 : STD_LOGIC_VECTOR (31 downto 0);
    signal Binded_Features_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Binded_Features_ce0 : STD_LOGIC;
    signal Binded_Features_we0 : STD_LOGIC;
    signal Binded_Features_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal Binded_Features_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal Binded_Features_ce1 : STD_LOGIC;
    signal Binded_Features_we1 : STD_LOGIC;
    signal Binded_Features_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_ap_start : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_ap_done : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_ap_idle : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_ap_ready : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce0 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we0 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce1 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we1 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce0 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce1 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce0 : STD_LOGIC;
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce1 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_done : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_idle : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_ready : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce0 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce1 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce0 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we0 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce1 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we1 : STD_LOGIC;
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_done : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_idle : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_ready : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_ce0 : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_ce0 : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_we0 : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_done : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_idle : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_ready : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce0 : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce1 : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce0 : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we0 : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce1 : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we1 : STD_LOGIC;
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_idle : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_ready : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce0 : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce1 : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce0 : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce1 : STD_LOGIC;
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_done : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_idle : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_ready : STD_LOGIC;
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_p_pred_class_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_p_pred_class_o_ap_vld : STD_LOGIC;
    signal add_ln275_fu_3894_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_1329_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln271_fu_3851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln268_fu_3846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_bind_ap_uint_1_100_s_fu_1335_ap_start_reg : STD_LOGIC := '0';
    signal grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal ap_sig_allocacmp_similarity_classes_2_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_similarity_classes_0_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_similarity_classes_1_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state57_on_subcall_done : BOOLEAN;
    signal trunc_ln177_fu_1407_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal trunc_ln197_fu_2205_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln258_fu_3039_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal icmp_ln245_fu_3013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_fu_3023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln255_1_fu_3028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_fu_3868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_1_fu_3881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_fu_3873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln7_1_fu_3886_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln278_fu_3919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_1_fu_3924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op555_call_state54 : BOOLEAN;
    signal ap_predicate_op557_call_state54 : BOOLEAN;
    signal ap_block_state54_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (109 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_block_state109_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal regslice_both_sdata_i_V_data_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal sdata_i_TVALID_int_regslice : STD_LOGIC;
    signal sdata_i_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_sdata_i_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_sdata_i_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TKEEP_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_sdata_i_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_sdata_i_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_sdata_i_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TSTRB_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_sdata_i_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_sdata_i_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_sdata_i_V_user_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_sdata_i_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_sdata_i_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_sdata_i_V_last_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_sdata_i_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_sdata_i_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_sdata_i_V_id_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_sdata_i_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_sdata_i_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_sdata_i_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal sdata_i_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_sdata_i_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_sdata_i_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hdv_engine_bind_ap_uint_1_100_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Binded_HV_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Binded_HV_ce0 : OUT STD_LOGIC;
        Binded_HV_we0 : OUT STD_LOGIC;
        Binded_HV_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        Binded_HV_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Binded_HV_ce1 : OUT STD_LOGIC;
        Binded_HV_we1 : OUT STD_LOGIC;
        Binded_HV_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        p_lhv_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_lhv_ce0 : OUT STD_LOGIC;
        p_lhv_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_lhv_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_lhv_ce1 : OUT STD_LOGIC;
        p_lhv_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_bhv_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_bhv_ce0 : OUT STD_LOGIC;
        p_bhv_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_bhv_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_bhv_ce1 : OUT STD_LOGIC;
        p_bhv_q1 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component hdv_engine_bundle_ap_uint_1_100_ap_int_12_100_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        HV1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        HV1_ce0 : OUT STD_LOGIC;
        HV1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        HV1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        HV1_ce1 : OUT STD_LOGIC;
        HV1_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        BundledHV_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        BundledHV_ce0 : OUT STD_LOGIC;
        BundledHV_we0 : OUT STD_LOGIC;
        BundledHV_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        BundledHV_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
        BundledHV_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        BundledHV_ce1 : OUT STD_LOGIC;
        BundledHV_we1 : OUT STD_LOGIC;
        BundledHV_d1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        BundledHV_q1 : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component hdv_engine_hdv_engine_Pipeline_VITIS_LOOP_222_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Binded_Features_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Binded_Features_ce0 : OUT STD_LOGIC;
        Binded_Features_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        BundledHV_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        BundledHV_ce0 : OUT STD_LOGIC;
        BundledHV_we0 : OUT STD_LOGIC;
        BundledHV_d0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component hdv_engine_clip_ap_int_100_ap_uint_100_RndGenerator_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        BundledHV_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        BundledHV_ce0 : OUT STD_LOGIC;
        BundledHV_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
        BundledHV_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        BundledHV_ce1 : OUT STD_LOGIC;
        BundledHV_q1 : IN STD_LOGIC_VECTOR (11 downto 0);
        Encoded_HV_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Encoded_HV_ce0 : OUT STD_LOGIC;
        Encoded_HV_we0 : OUT STD_LOGIC;
        Encoded_HV_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        Encoded_HV_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Encoded_HV_ce1 : OUT STD_LOGIC;
        Encoded_HV_we1 : OUT STD_LOGIC;
        Encoded_HV_d1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component hdv_engine_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_chv_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_chv_ce0 : OUT STD_LOGIC;
        p_chv_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_chv_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_chv_ce1 : OUT STD_LOGIC;
        p_chv_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        Encoded_HV_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Encoded_HV_ce0 : OUT STD_LOGIC;
        Encoded_HV_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        Encoded_HV_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Encoded_HV_ce1 : OUT STD_LOGIC;
        Encoded_HV_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component hdv_engine_hdv_engine_Pipeline_VITIS_LOOP_283_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        similarity_classes_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        similarity_classes_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        similarity_classes_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_pred_class_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        p_pred_class_o_ap_vld : OUT STD_LOGIC );
    end component;


    component hdv_engine_p_lhv_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component hdv_engine_BundledHV_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (11 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component hdv_engine_Binded_Features_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component hdv_engine_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    p_lhv_U : component hdv_engine_p_lhv_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_lhv_address0,
        ce0 => p_lhv_ce0,
        we0 => p_lhv_we0,
        d0 => p_lhv_d0,
        q0 => p_lhv_q0,
        address1 => p_lhv_address1,
        ce1 => p_lhv_ce1,
        we1 => p_lhv_we1,
        d1 => p_lhv_d1,
        q1 => p_lhv_q1);

    p_bhv_U : component hdv_engine_p_lhv_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_bhv_address0,
        ce0 => p_bhv_ce0,
        we0 => p_bhv_we0,
        d0 => p_bhv_d0,
        q0 => p_bhv_q0,
        address1 => p_bhv_address1,
        ce1 => p_bhv_ce1,
        we1 => p_bhv_we1,
        d1 => p_bhv_d1,
        q1 => p_bhv_q1);

    BundledHV_U : component hdv_engine_BundledHV_RAM_AUTO_1R1W
    generic map (
        DataWidth => 12,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => BundledHV_address0,
        ce0 => BundledHV_ce0,
        we0 => BundledHV_we0,
        d0 => BundledHV_d0,
        q0 => BundledHV_q0,
        address1 => BundledHV_address1,
        ce1 => BundledHV_ce1,
        we1 => BundledHV_we1,
        d1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d1,
        q1 => BundledHV_q1);

    Encoded_HV_U : component hdv_engine_p_lhv_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Encoded_HV_address0,
        ce0 => Encoded_HV_ce0,
        we0 => Encoded_HV_we0,
        d0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_d0,
        q0 => Encoded_HV_q0,
        address1 => Encoded_HV_address1,
        ce1 => Encoded_HV_ce1,
        we1 => Encoded_HV_we1,
        d1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_d1,
        q1 => Encoded_HV_q1);

    p_chv_U : component hdv_engine_p_lhv_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_chv_address0,
        ce0 => p_chv_ce0,
        we0 => p_chv_we0,
        d0 => p_chv_d0,
        q0 => p_chv_q0,
        address1 => p_chv_address1,
        ce1 => p_chv_ce1,
        we1 => p_chv_we1,
        d1 => p_chv_d1,
        q1 => p_chv_q1);

    Binded_Features_U : component hdv_engine_Binded_Features_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Binded_Features_address0,
        ce0 => Binded_Features_ce0,
        we0 => Binded_Features_we0,
        d0 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_d0,
        q0 => Binded_Features_q0,
        address1 => Binded_Features_address1,
        ce1 => Binded_Features_ce1,
        we1 => Binded_Features_we1,
        d1 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_d1,
        q1 => Binded_Features_q1);

    grp_bind_ap_uint_1_100_s_fu_1335 : component hdv_engine_bind_ap_uint_1_100_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bind_ap_uint_1_100_s_fu_1335_ap_start,
        ap_done => grp_bind_ap_uint_1_100_s_fu_1335_ap_done,
        ap_idle => grp_bind_ap_uint_1_100_s_fu_1335_ap_idle,
        ap_ready => grp_bind_ap_uint_1_100_s_fu_1335_ap_ready,
        Binded_HV_address0 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address0,
        Binded_HV_ce0 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce0,
        Binded_HV_we0 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we0,
        Binded_HV_d0 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_d0,
        Binded_HV_address1 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address1,
        Binded_HV_ce1 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce1,
        Binded_HV_we1 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we1,
        Binded_HV_d1 => grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_d1,
        p_lhv_address0 => grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address0,
        p_lhv_ce0 => grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce0,
        p_lhv_q0 => p_lhv_q0,
        p_lhv_address1 => grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address1,
        p_lhv_ce1 => grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce1,
        p_lhv_q1 => p_lhv_q1,
        p_bhv_address0 => grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address0,
        p_bhv_ce0 => grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce0,
        p_bhv_q0 => p_bhv_q0,
        p_bhv_address1 => grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address1,
        p_bhv_ce1 => grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce1,
        p_bhv_q1 => p_bhv_q1);

    grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344 : component hdv_engine_bundle_ap_uint_1_100_ap_int_12_100_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start,
        ap_done => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_done,
        ap_idle => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_idle,
        ap_ready => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_ready,
        HV1_address0 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address0,
        HV1_ce0 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce0,
        HV1_q0 => Binded_Features_q0,
        HV1_address1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address1,
        HV1_ce1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce1,
        HV1_q1 => Binded_Features_q1,
        BundledHV_address0 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address0,
        BundledHV_ce0 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce0,
        BundledHV_we0 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we0,
        BundledHV_d0 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d0,
        BundledHV_q0 => BundledHV_q0,
        BundledHV_address1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address1,
        BundledHV_ce1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce1,
        BundledHV_we1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we1,
        BundledHV_d1 => grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d1,
        BundledHV_q1 => BundledHV_q1);

    grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351 : component hdv_engine_hdv_engine_Pipeline_VITIS_LOOP_222_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start,
        ap_done => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_done,
        ap_idle => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_idle,
        ap_ready => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_ready,
        Binded_Features_address0 => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_address0,
        Binded_Features_ce0 => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_ce0,
        Binded_Features_q0 => Binded_Features_q0,
        BundledHV_address0 => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_address0,
        BundledHV_ce0 => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_ce0,
        BundledHV_we0 => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_we0,
        BundledHV_d0 => grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_d0);

    grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358 : component hdv_engine_clip_ap_int_100_ap_uint_100_RndGenerator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start,
        ap_done => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_done,
        ap_idle => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_idle,
        ap_ready => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_ready,
        BundledHV_address0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address0,
        BundledHV_ce0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce0,
        BundledHV_q0 => BundledHV_q0,
        BundledHV_address1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address1,
        BundledHV_ce1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce1,
        BundledHV_q1 => BundledHV_q1,
        Encoded_HV_address0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address0,
        Encoded_HV_ce0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce0,
        Encoded_HV_we0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we0,
        Encoded_HV_d0 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_d0,
        Encoded_HV_address1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address1,
        Encoded_HV_ce1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce1,
        Encoded_HV_we1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we1,
        Encoded_HV_d1 => grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_d1);

    grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366 : component hdv_engine_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start,
        ap_done => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done,
        ap_idle => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_idle,
        ap_ready => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_ready,
        p_chv_address0 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address0,
        p_chv_ce0 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce0,
        p_chv_q0 => p_chv_q0,
        p_chv_address1 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address1,
        p_chv_ce1 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce1,
        p_chv_q1 => p_chv_q1,
        Encoded_HV_address0 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address0,
        Encoded_HV_ce0 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce0,
        Encoded_HV_q0 => Encoded_HV_q0,
        Encoded_HV_address1 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address1,
        Encoded_HV_ce1 => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce1,
        Encoded_HV_q1 => Encoded_HV_q1,
        ap_return => grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_return);

    grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374 : component hdv_engine_hdv_engine_Pipeline_VITIS_LOOP_283_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start,
        ap_done => grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_done,
        ap_idle => grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_idle,
        ap_ready => grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_ready,
        similarity_classes_0_load_1 => similarity_classes_0_load_1_reg_5491,
        similarity_classes_2_load_1 => similarity_classes_2_load_1_reg_5486,
        similarity_classes_1_load_1 => similarity_classes_1_load_1_reg_5496,
        p_pred_class_o => grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_p_pred_class_o,
        p_pred_class_o_ap_vld => grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_p_pred_class_o_ap_vld);

    regslice_both_sdata_i_V_data_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TDATA,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_data_V_U_ack_in,
        data_out => sdata_i_TDATA_int_regslice,
        vld_out => sdata_i_TVALID_int_regslice,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_data_V_U_apdone_blk);

    regslice_both_sdata_i_V_keep_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TKEEP,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_keep_V_U_ack_in,
        data_out => sdata_i_TKEEP_int_regslice,
        vld_out => regslice_both_sdata_i_V_keep_V_U_vld_out,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_keep_V_U_apdone_blk);

    regslice_both_sdata_i_V_strb_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TSTRB,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_strb_V_U_ack_in,
        data_out => sdata_i_TSTRB_int_regslice,
        vld_out => regslice_both_sdata_i_V_strb_V_U_vld_out,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_strb_V_U_apdone_blk);

    regslice_both_sdata_i_V_user_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TUSER,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_user_V_U_ack_in,
        data_out => sdata_i_TUSER_int_regslice,
        vld_out => regslice_both_sdata_i_V_user_V_U_vld_out,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_user_V_U_apdone_blk);

    regslice_both_sdata_i_V_last_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TLAST,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_last_V_U_ack_in,
        data_out => sdata_i_TLAST_int_regslice,
        vld_out => regslice_both_sdata_i_V_last_V_U_vld_out,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_last_V_U_apdone_blk);

    regslice_both_sdata_i_V_id_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TID,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_id_V_U_ack_in,
        data_out => sdata_i_TID_int_regslice,
        vld_out => regslice_both_sdata_i_V_id_V_U_vld_out,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_id_V_U_apdone_blk);

    regslice_both_sdata_i_V_dest_V_U : component hdv_engine_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => sdata_i_TDEST,
        vld_in => sdata_i_TVALID,
        ack_in => regslice_both_sdata_i_V_dest_V_U_ack_in,
        data_out => sdata_i_TDEST_int_regslice,
        vld_out => regslice_both_sdata_i_V_dest_V_U_vld_out,
        ack_out => sdata_i_TREADY_int_regslice,
        apdone_blk => regslice_both_sdata_i_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_bind_ap_uint_1_100_s_fu_1335_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_bind_ap_uint_1_100_s_fu_1335_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln210_fu_3003_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                    grp_bind_ap_uint_1_100_s_fu_1335_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bind_ap_uint_1_100_s_fu_1335_ap_ready = ap_const_logic_1)) then 
                    grp_bind_ap_uint_1_100_s_fu_1335_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                    grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_ready = ap_const_logic_1)) then 
                    grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_ready = ap_const_logic_1)) then 
                    grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                    grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_ready = ap_const_logic_1)) then 
                    grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done = ap_const_logic_1) and (ap_const_lv1_1 = and_ln278_fu_3929_p2) and (ap_const_logic_1 = ap_CS_fsm_state108))) then 
                    grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_ready = ap_const_logic_1)) then 
                    grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
                    grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_ready = ap_const_logic_1)) then 
                    grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                and_ln245_reg_4976 <= and_ln245_fu_3018_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state108)) then
                and_ln278_reg_5482 <= and_ln278_fu_3929_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                frame_in_id_reg_3978 <= frame_in(41 downto 32);
                frame_in_index_reg_3970 <= frame_in(25 downto 16);
                frame_in_type_reg_3964 <= frame_in_type_fu_1383_p1;
                tmp_101_reg_4477 <= lhv_i(2 downto 2);
                tmp_102_reg_4482 <= lhv_i(3 downto 3);
                tmp_103_reg_4487 <= lhv_i(4 downto 4);
                tmp_104_reg_4492 <= lhv_i(5 downto 5);
                tmp_105_reg_4497 <= lhv_i(6 downto 6);
                tmp_106_reg_4502 <= lhv_i(7 downto 7);
                tmp_107_reg_4507 <= lhv_i(8 downto 8);
                tmp_108_reg_4512 <= lhv_i(9 downto 9);
                tmp_109_reg_4517 <= lhv_i(10 downto 10);
                tmp_10_reg_4027 <= bhv_i(10 downto 10);
                tmp_110_reg_4522 <= lhv_i(11 downto 11);
                tmp_111_reg_4527 <= lhv_i(12 downto 12);
                tmp_112_reg_4532 <= lhv_i(13 downto 13);
                tmp_113_reg_4537 <= lhv_i(14 downto 14);
                tmp_114_reg_4542 <= lhv_i(15 downto 15);
                tmp_115_reg_4547 <= lhv_i(16 downto 16);
                tmp_116_reg_4552 <= lhv_i(17 downto 17);
                tmp_117_reg_4557 <= lhv_i(18 downto 18);
                tmp_118_reg_4562 <= lhv_i(19 downto 19);
                tmp_119_reg_4567 <= lhv_i(20 downto 20);
                tmp_11_reg_4032 <= bhv_i(11 downto 11);
                tmp_120_reg_4572 <= lhv_i(21 downto 21);
                tmp_121_reg_4577 <= lhv_i(22 downto 22);
                tmp_122_reg_4582 <= lhv_i(23 downto 23);
                tmp_123_reg_4587 <= lhv_i(24 downto 24);
                tmp_124_reg_4592 <= lhv_i(25 downto 25);
                tmp_125_reg_4597 <= lhv_i(26 downto 26);
                tmp_126_reg_4602 <= lhv_i(27 downto 27);
                tmp_127_reg_4607 <= lhv_i(28 downto 28);
                tmp_128_reg_4612 <= lhv_i(29 downto 29);
                tmp_129_reg_4617 <= lhv_i(30 downto 30);
                tmp_12_reg_4037 <= bhv_i(12 downto 12);
                tmp_130_reg_4622 <= lhv_i(31 downto 31);
                tmp_131_reg_4627 <= lhv_i(32 downto 32);
                tmp_132_reg_4632 <= lhv_i(33 downto 33);
                tmp_133_reg_4637 <= lhv_i(34 downto 34);
                tmp_134_reg_4642 <= lhv_i(35 downto 35);
                tmp_135_reg_4647 <= lhv_i(36 downto 36);
                tmp_136_reg_4652 <= lhv_i(37 downto 37);
                tmp_137_reg_4657 <= lhv_i(38 downto 38);
                tmp_138_reg_4662 <= lhv_i(39 downto 39);
                tmp_139_reg_4667 <= lhv_i(40 downto 40);
                tmp_13_reg_4042 <= bhv_i(13 downto 13);
                tmp_140_reg_4672 <= lhv_i(41 downto 41);
                tmp_141_reg_4677 <= lhv_i(42 downto 42);
                tmp_142_reg_4682 <= lhv_i(43 downto 43);
                tmp_143_reg_4687 <= lhv_i(44 downto 44);
                tmp_144_reg_4692 <= lhv_i(45 downto 45);
                tmp_145_reg_4697 <= lhv_i(46 downto 46);
                tmp_146_reg_4702 <= lhv_i(47 downto 47);
                tmp_147_reg_4707 <= lhv_i(48 downto 48);
                tmp_148_reg_4712 <= lhv_i(49 downto 49);
                tmp_149_reg_4717 <= lhv_i(50 downto 50);
                tmp_14_reg_4047 <= bhv_i(14 downto 14);
                tmp_150_reg_4722 <= lhv_i(51 downto 51);
                tmp_151_reg_4727 <= lhv_i(52 downto 52);
                tmp_152_reg_4732 <= lhv_i(53 downto 53);
                tmp_153_reg_4737 <= lhv_i(54 downto 54);
                tmp_154_reg_4742 <= lhv_i(55 downto 55);
                tmp_155_reg_4747 <= lhv_i(56 downto 56);
                tmp_156_reg_4752 <= lhv_i(57 downto 57);
                tmp_157_reg_4757 <= lhv_i(58 downto 58);
                tmp_158_reg_4762 <= lhv_i(59 downto 59);
                tmp_159_reg_4767 <= lhv_i(60 downto 60);
                tmp_15_reg_4052 <= bhv_i(15 downto 15);
                tmp_160_reg_4772 <= lhv_i(61 downto 61);
                tmp_161_reg_4777 <= lhv_i(62 downto 62);
                tmp_162_reg_4782 <= lhv_i(63 downto 63);
                tmp_163_reg_4787 <= lhv_i(64 downto 64);
                tmp_164_reg_4792 <= lhv_i(65 downto 65);
                tmp_165_reg_4797 <= lhv_i(66 downto 66);
                tmp_166_reg_4802 <= lhv_i(67 downto 67);
                tmp_167_reg_4807 <= lhv_i(68 downto 68);
                tmp_168_reg_4812 <= lhv_i(69 downto 69);
                tmp_169_reg_4817 <= lhv_i(70 downto 70);
                tmp_16_reg_4057 <= bhv_i(16 downto 16);
                tmp_170_reg_4822 <= lhv_i(71 downto 71);
                tmp_171_reg_4827 <= lhv_i(72 downto 72);
                tmp_172_reg_4832 <= lhv_i(73 downto 73);
                tmp_173_reg_4837 <= lhv_i(74 downto 74);
                tmp_174_reg_4842 <= lhv_i(75 downto 75);
                tmp_175_reg_4847 <= lhv_i(76 downto 76);
                tmp_176_reg_4852 <= lhv_i(77 downto 77);
                tmp_177_reg_4857 <= lhv_i(78 downto 78);
                tmp_178_reg_4862 <= lhv_i(79 downto 79);
                tmp_179_reg_4867 <= lhv_i(80 downto 80);
                tmp_17_reg_4062 <= bhv_i(17 downto 17);
                tmp_180_reg_4872 <= lhv_i(81 downto 81);
                tmp_181_reg_4877 <= lhv_i(82 downto 82);
                tmp_182_reg_4882 <= lhv_i(83 downto 83);
                tmp_183_reg_4887 <= lhv_i(84 downto 84);
                tmp_184_reg_4892 <= lhv_i(85 downto 85);
                tmp_185_reg_4897 <= lhv_i(86 downto 86);
                tmp_186_reg_4902 <= lhv_i(87 downto 87);
                tmp_187_reg_4907 <= lhv_i(88 downto 88);
                tmp_188_reg_4912 <= lhv_i(89 downto 89);
                tmp_189_reg_4917 <= lhv_i(90 downto 90);
                tmp_18_reg_4067 <= bhv_i(18 downto 18);
                tmp_190_reg_4922 <= lhv_i(91 downto 91);
                tmp_191_reg_4927 <= lhv_i(92 downto 92);
                tmp_192_reg_4932 <= lhv_i(93 downto 93);
                tmp_193_reg_4937 <= lhv_i(94 downto 94);
                tmp_194_reg_4942 <= lhv_i(95 downto 95);
                tmp_195_reg_4947 <= lhv_i(96 downto 96);
                tmp_196_reg_4952 <= lhv_i(97 downto 97);
                tmp_197_reg_4957 <= lhv_i(98 downto 98);
                tmp_198_reg_4962 <= lhv_i(99 downto 99);
                tmp_19_reg_4072 <= bhv_i(19 downto 19);
                tmp_20_reg_4077 <= bhv_i(20 downto 20);
                tmp_21_reg_4082 <= bhv_i(21 downto 21);
                tmp_22_reg_4087 <= bhv_i(22 downto 22);
                tmp_23_reg_4092 <= bhv_i(23 downto 23);
                tmp_24_reg_4097 <= bhv_i(24 downto 24);
                tmp_25_reg_4102 <= bhv_i(25 downto 25);
                tmp_26_reg_4107 <= bhv_i(26 downto 26);
                tmp_27_reg_4112 <= bhv_i(27 downto 27);
                tmp_28_reg_4117 <= bhv_i(28 downto 28);
                tmp_29_reg_4122 <= bhv_i(29 downto 29);
                tmp_2_reg_3987 <= bhv_i(2 downto 2);
                tmp_30_reg_4127 <= bhv_i(30 downto 30);
                tmp_31_reg_4132 <= bhv_i(31 downto 31);
                tmp_32_reg_4137 <= bhv_i(32 downto 32);
                tmp_33_reg_4142 <= bhv_i(33 downto 33);
                tmp_34_reg_4147 <= bhv_i(34 downto 34);
                tmp_35_reg_4152 <= bhv_i(35 downto 35);
                tmp_36_reg_4157 <= bhv_i(36 downto 36);
                tmp_37_reg_4162 <= bhv_i(37 downto 37);
                tmp_38_reg_4167 <= bhv_i(38 downto 38);
                tmp_39_reg_4172 <= bhv_i(39 downto 39);
                tmp_3_reg_3992 <= bhv_i(3 downto 3);
                tmp_40_reg_4177 <= bhv_i(40 downto 40);
                tmp_41_reg_4182 <= bhv_i(41 downto 41);
                tmp_42_reg_4187 <= bhv_i(42 downto 42);
                tmp_43_reg_4192 <= bhv_i(43 downto 43);
                tmp_44_reg_4197 <= bhv_i(44 downto 44);
                tmp_45_reg_4202 <= bhv_i(45 downto 45);
                tmp_46_reg_4207 <= bhv_i(46 downto 46);
                tmp_47_reg_4212 <= bhv_i(47 downto 47);
                tmp_48_reg_4217 <= bhv_i(48 downto 48);
                tmp_49_reg_4222 <= bhv_i(49 downto 49);
                tmp_4_reg_3997 <= bhv_i(4 downto 4);
                tmp_50_reg_4227 <= bhv_i(50 downto 50);
                tmp_51_reg_4232 <= bhv_i(51 downto 51);
                tmp_52_reg_4237 <= bhv_i(52 downto 52);
                tmp_53_reg_4242 <= bhv_i(53 downto 53);
                tmp_54_reg_4247 <= bhv_i(54 downto 54);
                tmp_55_reg_4252 <= bhv_i(55 downto 55);
                tmp_56_reg_4257 <= bhv_i(56 downto 56);
                tmp_57_reg_4262 <= bhv_i(57 downto 57);
                tmp_58_reg_4267 <= bhv_i(58 downto 58);
                tmp_59_reg_4272 <= bhv_i(59 downto 59);
                tmp_5_reg_4002 <= bhv_i(5 downto 5);
                tmp_60_reg_4277 <= bhv_i(60 downto 60);
                tmp_61_reg_4282 <= bhv_i(61 downto 61);
                tmp_62_reg_4287 <= bhv_i(62 downto 62);
                tmp_63_reg_4292 <= bhv_i(63 downto 63);
                tmp_64_reg_4297 <= bhv_i(64 downto 64);
                tmp_65_reg_4302 <= bhv_i(65 downto 65);
                tmp_66_reg_4307 <= bhv_i(66 downto 66);
                tmp_67_reg_4312 <= bhv_i(67 downto 67);
                tmp_68_reg_4317 <= bhv_i(68 downto 68);
                tmp_69_reg_4322 <= bhv_i(69 downto 69);
                tmp_6_reg_4007 <= bhv_i(6 downto 6);
                tmp_70_reg_4327 <= bhv_i(70 downto 70);
                tmp_71_reg_4332 <= bhv_i(71 downto 71);
                tmp_72_reg_4337 <= bhv_i(72 downto 72);
                tmp_73_reg_4342 <= bhv_i(73 downto 73);
                tmp_74_reg_4347 <= bhv_i(74 downto 74);
                tmp_75_reg_4352 <= bhv_i(75 downto 75);
                tmp_76_reg_4357 <= bhv_i(76 downto 76);
                tmp_77_reg_4362 <= bhv_i(77 downto 77);
                tmp_78_reg_4367 <= bhv_i(78 downto 78);
                tmp_79_reg_4372 <= bhv_i(79 downto 79);
                tmp_7_reg_4012 <= bhv_i(7 downto 7);
                tmp_80_reg_4377 <= bhv_i(80 downto 80);
                tmp_81_reg_4382 <= bhv_i(81 downto 81);
                tmp_82_reg_4387 <= bhv_i(82 downto 82);
                tmp_83_reg_4392 <= bhv_i(83 downto 83);
                tmp_84_reg_4397 <= bhv_i(84 downto 84);
                tmp_85_reg_4402 <= bhv_i(85 downto 85);
                tmp_86_reg_4407 <= bhv_i(86 downto 86);
                tmp_87_reg_4412 <= bhv_i(87 downto 87);
                tmp_88_reg_4417 <= bhv_i(88 downto 88);
                tmp_89_reg_4422 <= bhv_i(89 downto 89);
                tmp_8_reg_4017 <= bhv_i(8 downto 8);
                tmp_90_reg_4427 <= bhv_i(90 downto 90);
                tmp_91_reg_4432 <= bhv_i(91 downto 91);
                tmp_92_reg_4437 <= bhv_i(92 downto 92);
                tmp_93_reg_4442 <= bhv_i(93 downto 93);
                tmp_94_reg_4447 <= bhv_i(94 downto 94);
                tmp_95_reg_4452 <= bhv_i(95 downto 95);
                tmp_96_reg_4457 <= bhv_i(96 downto 96);
                tmp_97_reg_4462 <= bhv_i(97 downto 97);
                tmp_98_reg_4467 <= bhv_i(98 downto 98);
                tmp_99_reg_4472 <= bhv_i(99 downto 99);
                tmp_9_reg_4022 <= bhv_i(9 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                icmp_ln210_reg_4967 <= icmp_ln210_fu_3003_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                icmp_ln218_reg_4972 <= icmp_ln218_fu_3008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln278_reg_5482) and (ap_const_logic_1 = ap_CS_fsm_state109) and (grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_p_pred_class_o_ap_vld = ap_const_logic_1))) then
                p_pred_class_o <= grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_p_pred_class_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done = ap_const_logic_1) and (trunc_ln_reg_5473 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                similarity_classes_0 <= ap_phi_mux_storemerge_phi_fu_1329_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln278_fu_3929_p2) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                similarity_classes_0_load_1_reg_5491 <= ap_sig_allocacmp_similarity_classes_0_load_1;
                similarity_classes_1_load_1_reg_5496 <= ap_sig_allocacmp_similarity_classes_1_load_1;
                similarity_classes_2_load_1_reg_5486 <= ap_sig_allocacmp_similarity_classes_2_load_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done = ap_const_logic_1) and (trunc_ln_reg_5473 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                similarity_classes_1 <= ap_phi_mux_storemerge_phi_fu_1329_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((trunc_ln_reg_5473 = ap_const_lv2_1)) and not((trunc_ln_reg_5473 = ap_const_lv2_0)) and (grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                similarity_classes_2 <= ap_phi_mux_storemerge_phi_fu_1329_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln255_fu_3033_p2) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                tmp_200_reg_4983 <= chv_i(2 downto 2);
                tmp_201_reg_4988 <= chv_i(3 downto 3);
                tmp_202_reg_4993 <= chv_i(4 downto 4);
                tmp_203_reg_4998 <= chv_i(5 downto 5);
                tmp_204_reg_5003 <= chv_i(6 downto 6);
                tmp_205_reg_5008 <= chv_i(7 downto 7);
                tmp_206_reg_5013 <= chv_i(8 downto 8);
                tmp_207_reg_5018 <= chv_i(9 downto 9);
                tmp_208_reg_5023 <= chv_i(10 downto 10);
                tmp_209_reg_5028 <= chv_i(11 downto 11);
                tmp_210_reg_5033 <= chv_i(12 downto 12);
                tmp_211_reg_5038 <= chv_i(13 downto 13);
                tmp_212_reg_5043 <= chv_i(14 downto 14);
                tmp_213_reg_5048 <= chv_i(15 downto 15);
                tmp_214_reg_5053 <= chv_i(16 downto 16);
                tmp_215_reg_5058 <= chv_i(17 downto 17);
                tmp_216_reg_5063 <= chv_i(18 downto 18);
                tmp_217_reg_5068 <= chv_i(19 downto 19);
                tmp_218_reg_5073 <= chv_i(20 downto 20);
                tmp_219_reg_5078 <= chv_i(21 downto 21);
                tmp_220_reg_5083 <= chv_i(22 downto 22);
                tmp_221_reg_5088 <= chv_i(23 downto 23);
                tmp_222_reg_5093 <= chv_i(24 downto 24);
                tmp_223_reg_5098 <= chv_i(25 downto 25);
                tmp_224_reg_5103 <= chv_i(26 downto 26);
                tmp_225_reg_5108 <= chv_i(27 downto 27);
                tmp_226_reg_5113 <= chv_i(28 downto 28);
                tmp_227_reg_5118 <= chv_i(29 downto 29);
                tmp_228_reg_5123 <= chv_i(30 downto 30);
                tmp_229_reg_5128 <= chv_i(31 downto 31);
                tmp_230_reg_5133 <= chv_i(32 downto 32);
                tmp_231_reg_5138 <= chv_i(33 downto 33);
                tmp_232_reg_5143 <= chv_i(34 downto 34);
                tmp_233_reg_5148 <= chv_i(35 downto 35);
                tmp_234_reg_5153 <= chv_i(36 downto 36);
                tmp_235_reg_5158 <= chv_i(37 downto 37);
                tmp_236_reg_5163 <= chv_i(38 downto 38);
                tmp_237_reg_5168 <= chv_i(39 downto 39);
                tmp_238_reg_5173 <= chv_i(40 downto 40);
                tmp_239_reg_5178 <= chv_i(41 downto 41);
                tmp_240_reg_5183 <= chv_i(42 downto 42);
                tmp_241_reg_5188 <= chv_i(43 downto 43);
                tmp_242_reg_5193 <= chv_i(44 downto 44);
                tmp_243_reg_5198 <= chv_i(45 downto 45);
                tmp_244_reg_5203 <= chv_i(46 downto 46);
                tmp_245_reg_5208 <= chv_i(47 downto 47);
                tmp_246_reg_5213 <= chv_i(48 downto 48);
                tmp_247_reg_5218 <= chv_i(49 downto 49);
                tmp_248_reg_5223 <= chv_i(50 downto 50);
                tmp_249_reg_5228 <= chv_i(51 downto 51);
                tmp_250_reg_5233 <= chv_i(52 downto 52);
                tmp_251_reg_5238 <= chv_i(53 downto 53);
                tmp_252_reg_5243 <= chv_i(54 downto 54);
                tmp_253_reg_5248 <= chv_i(55 downto 55);
                tmp_254_reg_5253 <= chv_i(56 downto 56);
                tmp_255_reg_5258 <= chv_i(57 downto 57);
                tmp_256_reg_5263 <= chv_i(58 downto 58);
                tmp_257_reg_5268 <= chv_i(59 downto 59);
                tmp_258_reg_5273 <= chv_i(60 downto 60);
                tmp_259_reg_5278 <= chv_i(61 downto 61);
                tmp_260_reg_5283 <= chv_i(62 downto 62);
                tmp_261_reg_5288 <= chv_i(63 downto 63);
                tmp_262_reg_5293 <= chv_i(64 downto 64);
                tmp_263_reg_5298 <= chv_i(65 downto 65);
                tmp_264_reg_5303 <= chv_i(66 downto 66);
                tmp_265_reg_5308 <= chv_i(67 downto 67);
                tmp_266_reg_5313 <= chv_i(68 downto 68);
                tmp_267_reg_5318 <= chv_i(69 downto 69);
                tmp_268_reg_5323 <= chv_i(70 downto 70);
                tmp_269_reg_5328 <= chv_i(71 downto 71);
                tmp_270_reg_5333 <= chv_i(72 downto 72);
                tmp_271_reg_5338 <= chv_i(73 downto 73);
                tmp_272_reg_5343 <= chv_i(74 downto 74);
                tmp_273_reg_5348 <= chv_i(75 downto 75);
                tmp_274_reg_5353 <= chv_i(76 downto 76);
                tmp_275_reg_5358 <= chv_i(77 downto 77);
                tmp_276_reg_5363 <= chv_i(78 downto 78);
                tmp_277_reg_5368 <= chv_i(79 downto 79);
                tmp_278_reg_5373 <= chv_i(80 downto 80);
                tmp_279_reg_5378 <= chv_i(81 downto 81);
                tmp_280_reg_5383 <= chv_i(82 downto 82);
                tmp_281_reg_5388 <= chv_i(83 downto 83);
                tmp_282_reg_5393 <= chv_i(84 downto 84);
                tmp_283_reg_5398 <= chv_i(85 downto 85);
                tmp_284_reg_5403 <= chv_i(86 downto 86);
                tmp_285_reg_5408 <= chv_i(87 downto 87);
                tmp_286_reg_5413 <= chv_i(88 downto 88);
                tmp_287_reg_5418 <= chv_i(89 downto 89);
                tmp_288_reg_5423 <= chv_i(90 downto 90);
                tmp_289_reg_5428 <= chv_i(91 downto 91);
                tmp_290_reg_5433 <= chv_i(92 downto 92);
                tmp_291_reg_5438 <= chv_i(93 downto 93);
                tmp_292_reg_5443 <= chv_i(94 downto 94);
                tmp_293_reg_5448 <= chv_i(95 downto 95);
                tmp_294_reg_5453 <= chv_i(96 downto 96);
                tmp_295_reg_5458 <= chv_i(97 downto 97);
                tmp_296_reg_5463 <= chv_i(98 downto 98);
                tmp_297_reg_5468 <= chv_i(99 downto 99);
                trunc_ln_reg_5473 <= frame_in(17 downto 16);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, icmp_ln210_fu_3003_p2, ap_CS_fsm_state51, icmp_ln218_fu_3008_p2, ap_CS_fsm_state52, and_ln245_fu_3018_p2, ap_CS_fsm_state54, ap_CS_fsm_state57, and_ln255_fu_3033_p2, ap_CS_fsm_state108, grp_bind_ap_uint_1_100_s_fu_1335_ap_done, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done, ap_CS_fsm_state109, ap_block_state57_on_subcall_done, ap_block_state54_on_subcall_done, ap_block_state109_on_subcall_done, sdata_i_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if (((icmp_ln210_fu_3003_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                if (((grp_bind_ap_uint_1_100_s_fu_1335_ap_done = ap_const_logic_1) and (icmp_ln218_fu_3008_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                elsif (((grp_bind_ap_uint_1_100_s_fu_1335_ap_done = ap_const_logic_1) and (icmp_ln218_fu_3008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (ap_const_boolean_0 = ap_block_state54_on_subcall_done) and (ap_const_lv1_0 = and_ln245_fu_3018_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                elsif (((ap_const_lv1_1 = and_ln245_fu_3018_p2) and (ap_const_logic_1 = ap_CS_fsm_state54) and (ap_const_boolean_0 = ap_block_state54_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_boolean_0 = ap_block_state57_on_subcall_done) and (ap_const_lv1_0 = and_ln255_fu_3033_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                elsif (((ap_const_lv1_1 = and_ln255_fu_3033_p2) and (ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_boolean_0 = ap_block_state57_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                if (((grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state108))) then
                    ap_NS_fsm <= ap_ST_fsm_state109;
                else
                    ap_NS_fsm <= ap_ST_fsm_state108;
                end if;
            when ap_ST_fsm_state109 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_const_boolean_0 = ap_block_state109_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                else
                    ap_NS_fsm <= ap_ST_fsm_state109;
                end if;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Binded_Features_address0_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state52, ap_CS_fsm_state54, grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address0, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address0, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_address0)
    begin
        if (((icmp_ln218_reg_4972 = ap_const_lv1_1) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            Binded_Features_address0 <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_address0;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            Binded_Features_address0 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            Binded_Features_address0 <= grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address0;
        else 
            Binded_Features_address0 <= "XXXXXXX";
        end if; 
    end process;


    Binded_Features_address1_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state52, ap_CS_fsm_state54, grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address1, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address1)
    begin
        if (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            Binded_Features_address1 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            Binded_Features_address1 <= grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_address1;
        else 
            Binded_Features_address1 <= "XXXXXXX";
        end if; 
    end process;


    Binded_Features_ce0_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state52, ap_CS_fsm_state54, grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce0, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce0, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_ce0)
    begin
        if (((icmp_ln218_reg_4972 = ap_const_lv1_1) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            Binded_Features_ce0 <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_Binded_Features_ce0;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            Binded_Features_ce0 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            Binded_Features_ce0 <= grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce0;
        else 
            Binded_Features_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Binded_Features_ce1_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state52, ap_CS_fsm_state54, grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce1, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce1)
    begin
        if (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            Binded_Features_ce1 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_HV1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            Binded_Features_ce1 <= grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_ce1;
        else 
            Binded_Features_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Binded_Features_we0_assign_proc : process(ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            Binded_Features_we0 <= grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we0;
        else 
            Binded_Features_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Binded_Features_we1_assign_proc : process(ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            Binded_Features_we1 <= grp_bind_ap_uint_1_100_s_fu_1335_Binded_HV_we1;
        else 
            Binded_Features_we1 <= ap_const_logic_0;
        end if; 
    end process;


    BundledHV_address0_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, and_ln245_reg_4976, ap_CS_fsm_state54, ap_CS_fsm_state57, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address0, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_address0, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address0)
    begin
        if (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            BundledHV_address0 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address0;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_1) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_address0 <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_address0;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_address0 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address0;
        else 
            BundledHV_address0 <= "XXXXXXX";
        end if; 
    end process;


    BundledHV_address1_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, and_ln245_reg_4976, ap_CS_fsm_state54, ap_CS_fsm_state57, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address1, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address1)
    begin
        if (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            BundledHV_address1 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_address1;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_address1 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_address1;
        else 
            BundledHV_address1 <= "XXXXXXX";
        end if; 
    end process;


    BundledHV_ce0_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, and_ln245_reg_4976, ap_CS_fsm_state54, ap_CS_fsm_state57, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce0, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_ce0, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce0)
    begin
        if (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            BundledHV_ce0 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce0;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_1) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_ce0 <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_ce0;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_ce0 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce0;
        else 
            BundledHV_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    BundledHV_ce1_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, and_ln245_reg_4976, ap_CS_fsm_state54, ap_CS_fsm_state57, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce1, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce1)
    begin
        if (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            BundledHV_ce1 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_BundledHV_ce1;
        elsif (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_ce1 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_ce1;
        else 
            BundledHV_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    BundledHV_d0_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state54, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d0, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_d0)
    begin
        if (((icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
            if ((icmp_ln218_reg_4972 = ap_const_lv1_1)) then 
                BundledHV_d0 <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_d0;
            elsif ((icmp_ln218_reg_4972 = ap_const_lv1_0)) then 
                BundledHV_d0 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_d0;
            else 
                BundledHV_d0 <= "XXXXXXXXXXXX";
            end if;
        else 
            BundledHV_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    BundledHV_we0_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state54, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we0, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_we0)
    begin
        if (((icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
            if ((icmp_ln218_reg_4972 = ap_const_lv1_1)) then 
                BundledHV_we0 <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_BundledHV_we0;
            elsif ((icmp_ln218_reg_4972 = ap_const_lv1_0)) then 
                BundledHV_we0 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we0;
            else 
                BundledHV_we0 <= ap_const_logic_0;
            end if;
        else 
            BundledHV_we0 <= ap_const_logic_0;
        end if; 
    end process;


    BundledHV_we1_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972, ap_CS_fsm_state54, grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we1)
    begin
        if (((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            BundledHV_we1 <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_BundledHV_we1;
        else 
            BundledHV_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Encoded_HV_address0_assign_proc : process(and_ln245_reg_4976, ap_CS_fsm_state57, ap_CS_fsm_state108, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address0, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            Encoded_HV_address0 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address0;
        elsif (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            Encoded_HV_address0 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address0;
        else 
            Encoded_HV_address0 <= "XXXXXXX";
        end if; 
    end process;


    Encoded_HV_address1_assign_proc : process(and_ln245_reg_4976, ap_CS_fsm_state57, ap_CS_fsm_state108, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address1, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            Encoded_HV_address1 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_address1;
        elsif (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            Encoded_HV_address1 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_address1;
        else 
            Encoded_HV_address1 <= "XXXXXXX";
        end if; 
    end process;


    Encoded_HV_ce0_assign_proc : process(and_ln245_reg_4976, ap_CS_fsm_state57, ap_CS_fsm_state108, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce0, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            Encoded_HV_ce0 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce0;
        elsif (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            Encoded_HV_ce0 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce0;
        else 
            Encoded_HV_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Encoded_HV_ce1_assign_proc : process(and_ln245_reg_4976, ap_CS_fsm_state57, ap_CS_fsm_state108, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce1, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            Encoded_HV_ce1 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_Encoded_HV_ce1;
        elsif (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            Encoded_HV_ce1 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_ce1;
        else 
            Encoded_HV_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Encoded_HV_we0_assign_proc : process(and_ln245_reg_4976, ap_CS_fsm_state57, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we0)
    begin
        if (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            Encoded_HV_we0 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we0;
        else 
            Encoded_HV_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Encoded_HV_we1_assign_proc : process(and_ln245_reg_4976, ap_CS_fsm_state57, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we1)
    begin
        if (((ap_const_lv1_1 = and_ln245_reg_4976) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            Encoded_HV_we1 <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_Encoded_HV_we1;
        else 
            Encoded_HV_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln275_fu_3894_p2 <= std_logic_vector(unsigned(select_ln7_1_fu_3886_p3) + unsigned(sext_ln268_fu_3846_p1));
    and_ln245_fu_3018_p2 <= (icmp_ln245_fu_3013_p2 and icmp_ln210_reg_4967);
    and_ln255_fu_3033_p2 <= (icmp_ln255_fu_3023_p2 and icmp_ln255_1_fu_3028_p2);
    and_ln278_fu_3929_p2 <= (icmp_ln278_fu_3919_p2 and icmp_ln278_1_fu_3924_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state107 <= ap_CS_fsm(106);
    ap_CS_fsm_state108 <= ap_CS_fsm(107);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state92 <= ap_CS_fsm(91);
    ap_CS_fsm_state93 <= ap_CS_fsm(92);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);
    ap_ST_fsm_state100_blk <= ap_const_logic_0;
    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;
    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;
    ap_ST_fsm_state107_blk <= ap_const_logic_0;

    ap_ST_fsm_state108_blk_assign_proc : process(grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done)
    begin
        if ((grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state108_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state108_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state109_blk_assign_proc : process(ap_block_state109_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state109_on_subcall_done)) then 
            ap_ST_fsm_state109_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state109_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, tmp_nbreadreq_fu_928_p9, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(grp_bind_ap_uint_1_100_s_fu_1335_ap_done)
    begin
        if ((grp_bind_ap_uint_1_100_s_fu_1335_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(ap_block_state54_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state54_on_subcall_done)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;

    ap_ST_fsm_state57_blk_assign_proc : process(ap_block_state57_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state57_on_subcall_done)) then 
            ap_ST_fsm_state57_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state57_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state90_blk <= ap_const_logic_0;
    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;
    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, tmp_nbreadreq_fu_928_p9, sdata_i_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)));
    end process;


    ap_block_state109_on_subcall_done_assign_proc : process(and_ln278_reg_5482, grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_done)
    begin
                ap_block_state109_on_subcall_done <= ((grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_done = ap_const_logic_0) and (ap_const_lv1_1 = and_ln278_reg_5482));
    end process;


    ap_block_state54_on_subcall_done_assign_proc : process(grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_done, grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_done, ap_predicate_op555_call_state54, ap_predicate_op557_call_state54)
    begin
                ap_block_state54_on_subcall_done <= (((grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_done = ap_const_logic_0) and (ap_predicate_op557_call_state54 = ap_const_boolean_1)) or ((grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_done = ap_const_logic_0) and (ap_predicate_op555_call_state54 = ap_const_boolean_1)));
    end process;


    ap_block_state57_on_subcall_done_assign_proc : process(and_ln245_reg_4976, grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_done)
    begin
                ap_block_state57_on_subcall_done <= ((grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_done = ap_const_logic_0) and (ap_const_lv1_1 = and_ln245_reg_4976));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state110)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_1329_p4_assign_proc : process(ap_CS_fsm_state108, add_ln275_fu_3894_p2, icmp_ln271_fu_3851_p2, sext_ln268_fu_3846_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then
            if ((icmp_ln271_fu_3851_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_phi_fu_1329_p4 <= sext_ln268_fu_3846_p1;
            elsif ((icmp_ln271_fu_3851_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_phi_fu_1329_p4 <= add_ln275_fu_3894_p2;
            else 
                ap_phi_mux_storemerge_phi_fu_1329_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_phi_fu_1329_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_predicate_op555_call_state54_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972)
    begin
                ap_predicate_op555_call_state54 <= ((icmp_ln218_reg_4972 = ap_const_lv1_0) and (icmp_ln210_reg_4967 = ap_const_lv1_1));
    end process;


    ap_predicate_op557_call_state54_assign_proc : process(icmp_ln210_reg_4967, icmp_ln218_reg_4972)
    begin
                ap_predicate_op557_call_state54 <= ((icmp_ln218_reg_4972 = ap_const_lv1_1) and (icmp_ln210_reg_4967 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state110)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state110)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_similarity_classes_0_load_1_assign_proc : process(similarity_classes_0, trunc_ln_reg_5473, ap_CS_fsm_state108, ap_phi_mux_storemerge_phi_fu_1329_p4)
    begin
        if (((trunc_ln_reg_5473 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state108))) then 
            ap_sig_allocacmp_similarity_classes_0_load_1 <= ap_phi_mux_storemerge_phi_fu_1329_p4;
        else 
            ap_sig_allocacmp_similarity_classes_0_load_1 <= similarity_classes_0;
        end if; 
    end process;


    ap_sig_allocacmp_similarity_classes_1_load_1_assign_proc : process(similarity_classes_1, trunc_ln_reg_5473, ap_CS_fsm_state108, ap_phi_mux_storemerge_phi_fu_1329_p4)
    begin
        if (((trunc_ln_reg_5473 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state108))) then 
            ap_sig_allocacmp_similarity_classes_1_load_1 <= ap_phi_mux_storemerge_phi_fu_1329_p4;
        else 
            ap_sig_allocacmp_similarity_classes_1_load_1 <= similarity_classes_1;
        end if; 
    end process;


    ap_sig_allocacmp_similarity_classes_2_load_1_assign_proc : process(similarity_classes_2, trunc_ln_reg_5473, ap_CS_fsm_state108, ap_phi_mux_storemerge_phi_fu_1329_p4)
    begin
        if ((not((trunc_ln_reg_5473 = ap_const_lv2_1)) and not((trunc_ln_reg_5473 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state108))) then 
            ap_sig_allocacmp_similarity_classes_2_load_1 <= ap_phi_mux_storemerge_phi_fu_1329_p4;
        else 
            ap_sig_allocacmp_similarity_classes_2_load_1 <= similarity_classes_2;
        end if; 
    end process;

    frame_in_type_fu_1383_p1 <= frame_in(2 - 1 downto 0);
    grp_bind_ap_uint_1_100_s_fu_1335_ap_start <= grp_bind_ap_uint_1_100_s_fu_1335_ap_start_reg;
    grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start <= grp_bundle_ap_uint_1_100_ap_int_12_100_s_fu_1344_ap_start_reg;
    grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start <= grp_clip_ap_int_100_ap_uint_100_RndGenerator_s_fu_1358_ap_start_reg;
    grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start <= grp_hdv_engine_Pipeline_VITIS_LOOP_222_1_fu_1351_ap_start_reg;
    grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start <= grp_hdv_engine_Pipeline_VITIS_LOOP_283_2_fu_1374_ap_start_reg;
    grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_start_reg;
    icmp_ln210_fu_3003_p2 <= "1" when (frame_in_type_reg_3964 = ap_const_lv2_0) else "0";
    icmp_ln218_fu_3008_p2 <= "1" when (frame_in_index_reg_3970 = ap_const_lv10_0) else "0";
    icmp_ln245_fu_3013_p2 <= "1" when (frame_in_index_reg_3970 = ap_const_lv10_14) else "0";
    icmp_ln255_1_fu_3028_p2 <= "1" when (frame_in_type_reg_3964 = ap_const_lv2_1) else "0";
    icmp_ln255_fu_3023_p2 <= "1" when (unsigned(frame_in_index_reg_3970) < unsigned(ap_const_lv10_3)) else "0";
    icmp_ln271_fu_3851_p2 <= "1" when (frame_in_id_reg_3978 = ap_const_lv10_0) else "0";
    icmp_ln278_1_fu_3924_p2 <= "1" when (frame_in_id_reg_3978 = ap_const_lv10_9) else "0";
    icmp_ln278_fu_3919_p2 <= "1" when (frame_in_index_reg_3970 = ap_const_lv10_2) else "0";
    icmp_ln7_1_fu_3881_p2 <= "1" when (trunc_ln_reg_5473 = ap_const_lv2_1) else "0";
    icmp_ln7_fu_3868_p2 <= "1" when (trunc_ln_reg_5473 = ap_const_lv2_0) else "0";

    p_bhv_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_bhv_address0 <= ap_const_lv7_63;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_bhv_address0 <= ap_const_lv7_61;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_bhv_address0 <= ap_const_lv7_5F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_bhv_address0 <= ap_const_lv7_5D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_bhv_address0 <= ap_const_lv7_5B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_bhv_address0 <= ap_const_lv7_59;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_bhv_address0 <= ap_const_lv7_57;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_bhv_address0 <= ap_const_lv7_55;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_bhv_address0 <= ap_const_lv7_53;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_bhv_address0 <= ap_const_lv7_51;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_bhv_address0 <= ap_const_lv7_4F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_bhv_address0 <= ap_const_lv7_4D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_bhv_address0 <= ap_const_lv7_4B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_bhv_address0 <= ap_const_lv7_49;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_bhv_address0 <= ap_const_lv7_47;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_bhv_address0 <= ap_const_lv7_45;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_bhv_address0 <= ap_const_lv7_43;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_bhv_address0 <= ap_const_lv7_41;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_bhv_address0 <= ap_const_lv7_3F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_bhv_address0 <= ap_const_lv7_3D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_bhv_address0 <= ap_const_lv7_3B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_bhv_address0 <= ap_const_lv7_39;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_bhv_address0 <= ap_const_lv7_37;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_bhv_address0 <= ap_const_lv7_35;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_bhv_address0 <= ap_const_lv7_33;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_bhv_address0 <= ap_const_lv7_31;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_bhv_address0 <= ap_const_lv7_2F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_bhv_address0 <= ap_const_lv7_2D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_bhv_address0 <= ap_const_lv7_2B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_bhv_address0 <= ap_const_lv7_29;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_bhv_address0 <= ap_const_lv7_27;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_bhv_address0 <= ap_const_lv7_25;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_bhv_address0 <= ap_const_lv7_23;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_bhv_address0 <= ap_const_lv7_21;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_bhv_address0 <= ap_const_lv7_1F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_bhv_address0 <= ap_const_lv7_1D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_bhv_address0 <= ap_const_lv7_1B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_bhv_address0 <= ap_const_lv7_19;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_bhv_address0 <= ap_const_lv7_17;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_bhv_address0 <= ap_const_lv7_15;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_bhv_address0 <= ap_const_lv7_13;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_bhv_address0 <= ap_const_lv7_11;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_bhv_address0 <= ap_const_lv7_F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_bhv_address0 <= ap_const_lv7_D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_bhv_address0 <= ap_const_lv7_B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_bhv_address0 <= ap_const_lv7_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_bhv_address0 <= ap_const_lv7_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_bhv_address0 <= ap_const_lv7_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_bhv_address0 <= ap_const_lv7_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_bhv_address0 <= ap_const_lv7_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_bhv_address0 <= grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address0;
        else 
            p_bhv_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_bhv_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_bhv_address1 <= ap_const_lv7_62;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_bhv_address1 <= ap_const_lv7_60;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_bhv_address1 <= ap_const_lv7_5E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_bhv_address1 <= ap_const_lv7_5C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_bhv_address1 <= ap_const_lv7_5A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_bhv_address1 <= ap_const_lv7_58;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_bhv_address1 <= ap_const_lv7_56;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_bhv_address1 <= ap_const_lv7_54;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_bhv_address1 <= ap_const_lv7_52;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_bhv_address1 <= ap_const_lv7_50;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_bhv_address1 <= ap_const_lv7_4E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_bhv_address1 <= ap_const_lv7_4C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_bhv_address1 <= ap_const_lv7_4A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_bhv_address1 <= ap_const_lv7_48;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_bhv_address1 <= ap_const_lv7_46;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_bhv_address1 <= ap_const_lv7_44;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_bhv_address1 <= ap_const_lv7_42;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_bhv_address1 <= ap_const_lv7_40;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_bhv_address1 <= ap_const_lv7_3E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_bhv_address1 <= ap_const_lv7_3C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_bhv_address1 <= ap_const_lv7_3A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_bhv_address1 <= ap_const_lv7_38;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_bhv_address1 <= ap_const_lv7_36;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_bhv_address1 <= ap_const_lv7_34;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_bhv_address1 <= ap_const_lv7_32;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_bhv_address1 <= ap_const_lv7_30;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_bhv_address1 <= ap_const_lv7_2E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_bhv_address1 <= ap_const_lv7_2C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_bhv_address1 <= ap_const_lv7_2A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_bhv_address1 <= ap_const_lv7_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_bhv_address1 <= ap_const_lv7_26;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_bhv_address1 <= ap_const_lv7_24;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_bhv_address1 <= ap_const_lv7_22;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_bhv_address1 <= ap_const_lv7_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_bhv_address1 <= ap_const_lv7_1E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_bhv_address1 <= ap_const_lv7_1C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_bhv_address1 <= ap_const_lv7_1A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_bhv_address1 <= ap_const_lv7_18;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_bhv_address1 <= ap_const_lv7_16;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_bhv_address1 <= ap_const_lv7_14;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_bhv_address1 <= ap_const_lv7_12;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_bhv_address1 <= ap_const_lv7_10;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_bhv_address1 <= ap_const_lv7_E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_bhv_address1 <= ap_const_lv7_C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_bhv_address1 <= ap_const_lv7_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_bhv_address1 <= ap_const_lv7_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_bhv_address1 <= ap_const_lv7_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_bhv_address1 <= ap_const_lv7_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_bhv_address1 <= ap_const_lv7_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_bhv_address1 <= ap_const_lv7_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_bhv_address1 <= grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_address1;
        else 
            p_bhv_address1 <= "XXXXXXX";
        end if; 
    end process;


    p_bhv_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_bhv_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_bhv_ce0 <= grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce0;
        else 
            p_bhv_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_bhv_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_bhv_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_bhv_ce1 <= grp_bind_ap_uint_1_100_s_fu_1335_p_bhv_ce1;
        else 
            p_bhv_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_bhv_d0_assign_proc : process(ap_CS_fsm_state1, bhv_i, tmp_3_reg_3992, tmp_5_reg_4002, tmp_7_reg_4012, tmp_9_reg_4022, tmp_11_reg_4032, tmp_13_reg_4042, tmp_15_reg_4052, tmp_17_reg_4062, tmp_19_reg_4072, tmp_21_reg_4082, tmp_23_reg_4092, tmp_25_reg_4102, tmp_27_reg_4112, tmp_29_reg_4122, tmp_31_reg_4132, tmp_33_reg_4142, tmp_35_reg_4152, tmp_37_reg_4162, tmp_39_reg_4172, tmp_41_reg_4182, tmp_43_reg_4192, tmp_45_reg_4202, tmp_47_reg_4212, tmp_49_reg_4222, tmp_51_reg_4232, tmp_53_reg_4242, tmp_55_reg_4252, tmp_57_reg_4262, tmp_59_reg_4272, tmp_61_reg_4282, tmp_63_reg_4292, tmp_65_reg_4302, tmp_67_reg_4312, tmp_69_reg_4322, tmp_71_reg_4332, tmp_73_reg_4342, tmp_75_reg_4352, tmp_77_reg_4362, tmp_79_reg_4372, tmp_81_reg_4382, tmp_83_reg_4392, tmp_85_reg_4402, tmp_87_reg_4412, tmp_89_reg_4422, tmp_91_reg_4432, tmp_93_reg_4442, tmp_95_reg_4452, tmp_97_reg_4462, tmp_99_reg_4472, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_bhv_d0 <= tmp_99_reg_4472;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_bhv_d0 <= tmp_97_reg_4462;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_bhv_d0 <= tmp_95_reg_4452;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_bhv_d0 <= tmp_93_reg_4442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_bhv_d0 <= tmp_91_reg_4432;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_bhv_d0 <= tmp_89_reg_4422;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_bhv_d0 <= tmp_87_reg_4412;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_bhv_d0 <= tmp_85_reg_4402;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_bhv_d0 <= tmp_83_reg_4392;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_bhv_d0 <= tmp_81_reg_4382;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_bhv_d0 <= tmp_79_reg_4372;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_bhv_d0 <= tmp_77_reg_4362;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_bhv_d0 <= tmp_75_reg_4352;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_bhv_d0 <= tmp_73_reg_4342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_bhv_d0 <= tmp_71_reg_4332;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_bhv_d0 <= tmp_69_reg_4322;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_bhv_d0 <= tmp_67_reg_4312;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_bhv_d0 <= tmp_65_reg_4302;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_bhv_d0 <= tmp_63_reg_4292;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_bhv_d0 <= tmp_61_reg_4282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_bhv_d0 <= tmp_59_reg_4272;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_bhv_d0 <= tmp_57_reg_4262;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_bhv_d0 <= tmp_55_reg_4252;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_bhv_d0 <= tmp_53_reg_4242;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_bhv_d0 <= tmp_51_reg_4232;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_bhv_d0 <= tmp_49_reg_4222;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_bhv_d0 <= tmp_47_reg_4212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_bhv_d0 <= tmp_45_reg_4202;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_bhv_d0 <= tmp_43_reg_4192;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_bhv_d0 <= tmp_41_reg_4182;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_bhv_d0 <= tmp_39_reg_4172;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_bhv_d0 <= tmp_37_reg_4162;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_bhv_d0 <= tmp_35_reg_4152;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_bhv_d0 <= tmp_33_reg_4142;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_bhv_d0 <= tmp_31_reg_4132;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_bhv_d0 <= tmp_29_reg_4122;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_bhv_d0 <= tmp_27_reg_4112;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_bhv_d0 <= tmp_25_reg_4102;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_bhv_d0 <= tmp_23_reg_4092;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_bhv_d0 <= tmp_21_reg_4082;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_bhv_d0 <= tmp_19_reg_4072;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_bhv_d0 <= tmp_17_reg_4062;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_bhv_d0 <= tmp_15_reg_4052;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_bhv_d0 <= tmp_13_reg_4042;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_bhv_d0 <= tmp_11_reg_4032;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_bhv_d0 <= tmp_9_reg_4022;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_bhv_d0 <= tmp_7_reg_4012;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_bhv_d0 <= tmp_5_reg_4002;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_bhv_d0 <= tmp_3_reg_3992;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_bhv_d0 <= bhv_i(1 downto 1);
        else 
            p_bhv_d0 <= "X";
        end if; 
    end process;


    p_bhv_d1_assign_proc : process(ap_CS_fsm_state1, tmp_2_reg_3987, tmp_4_reg_3997, tmp_6_reg_4007, tmp_8_reg_4017, tmp_10_reg_4027, tmp_12_reg_4037, tmp_14_reg_4047, tmp_16_reg_4057, tmp_18_reg_4067, tmp_20_reg_4077, tmp_22_reg_4087, tmp_24_reg_4097, tmp_26_reg_4107, tmp_28_reg_4117, tmp_30_reg_4127, tmp_32_reg_4137, tmp_34_reg_4147, tmp_36_reg_4157, tmp_38_reg_4167, tmp_40_reg_4177, tmp_42_reg_4187, tmp_44_reg_4197, tmp_46_reg_4207, tmp_48_reg_4217, tmp_50_reg_4227, tmp_52_reg_4237, tmp_54_reg_4247, tmp_56_reg_4257, tmp_58_reg_4267, tmp_60_reg_4277, tmp_62_reg_4287, tmp_64_reg_4297, tmp_66_reg_4307, tmp_68_reg_4317, tmp_70_reg_4327, tmp_72_reg_4337, tmp_74_reg_4347, tmp_76_reg_4357, tmp_78_reg_4367, tmp_80_reg_4377, tmp_82_reg_4387, tmp_84_reg_4397, tmp_86_reg_4407, tmp_88_reg_4417, tmp_90_reg_4427, tmp_92_reg_4437, tmp_94_reg_4447, tmp_96_reg_4457, tmp_98_reg_4467, trunc_ln177_fu_1407_p1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_bhv_d1 <= tmp_98_reg_4467;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_bhv_d1 <= tmp_96_reg_4457;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_bhv_d1 <= tmp_94_reg_4447;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_bhv_d1 <= tmp_92_reg_4437;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_bhv_d1 <= tmp_90_reg_4427;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_bhv_d1 <= tmp_88_reg_4417;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_bhv_d1 <= tmp_86_reg_4407;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_bhv_d1 <= tmp_84_reg_4397;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_bhv_d1 <= tmp_82_reg_4387;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_bhv_d1 <= tmp_80_reg_4377;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_bhv_d1 <= tmp_78_reg_4367;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_bhv_d1 <= tmp_76_reg_4357;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_bhv_d1 <= tmp_74_reg_4347;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_bhv_d1 <= tmp_72_reg_4337;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_bhv_d1 <= tmp_70_reg_4327;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_bhv_d1 <= tmp_68_reg_4317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_bhv_d1 <= tmp_66_reg_4307;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_bhv_d1 <= tmp_64_reg_4297;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_bhv_d1 <= tmp_62_reg_4287;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_bhv_d1 <= tmp_60_reg_4277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_bhv_d1 <= tmp_58_reg_4267;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_bhv_d1 <= tmp_56_reg_4257;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_bhv_d1 <= tmp_54_reg_4247;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_bhv_d1 <= tmp_52_reg_4237;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_bhv_d1 <= tmp_50_reg_4227;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_bhv_d1 <= tmp_48_reg_4217;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_bhv_d1 <= tmp_46_reg_4207;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_bhv_d1 <= tmp_44_reg_4197;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_bhv_d1 <= tmp_42_reg_4187;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_bhv_d1 <= tmp_40_reg_4177;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_bhv_d1 <= tmp_38_reg_4167;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_bhv_d1 <= tmp_36_reg_4157;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_bhv_d1 <= tmp_34_reg_4147;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_bhv_d1 <= tmp_32_reg_4137;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_bhv_d1 <= tmp_30_reg_4127;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_bhv_d1 <= tmp_28_reg_4117;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_bhv_d1 <= tmp_26_reg_4107;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_bhv_d1 <= tmp_24_reg_4097;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_bhv_d1 <= tmp_22_reg_4087;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_bhv_d1 <= tmp_20_reg_4077;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_bhv_d1 <= tmp_18_reg_4067;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_bhv_d1 <= tmp_16_reg_4057;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_bhv_d1 <= tmp_14_reg_4047;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_bhv_d1 <= tmp_12_reg_4037;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_bhv_d1 <= tmp_10_reg_4027;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_bhv_d1 <= tmp_8_reg_4017;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_bhv_d1 <= tmp_6_reg_4007;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_bhv_d1 <= tmp_4_reg_3997;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_bhv_d1 <= tmp_2_reg_3987;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_bhv_d1 <= trunc_ln177_fu_1407_p1;
        else 
            p_bhv_d1 <= "X";
        end if; 
    end process;


    p_bhv_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_bhv_we0 <= ap_const_logic_1;
        else 
            p_bhv_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_bhv_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_bhv_we1 <= ap_const_logic_1;
        else 
            p_bhv_we1 <= ap_const_logic_0;
        end if; 
    end process;


    p_chv_address0_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state108, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address0, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            p_chv_address0 <= ap_const_lv7_63;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            p_chv_address0 <= ap_const_lv7_61;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            p_chv_address0 <= ap_const_lv7_5F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            p_chv_address0 <= ap_const_lv7_5D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            p_chv_address0 <= ap_const_lv7_5B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            p_chv_address0 <= ap_const_lv7_59;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            p_chv_address0 <= ap_const_lv7_57;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            p_chv_address0 <= ap_const_lv7_55;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            p_chv_address0 <= ap_const_lv7_53;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            p_chv_address0 <= ap_const_lv7_51;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            p_chv_address0 <= ap_const_lv7_4F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            p_chv_address0 <= ap_const_lv7_4D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            p_chv_address0 <= ap_const_lv7_4B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            p_chv_address0 <= ap_const_lv7_49;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            p_chv_address0 <= ap_const_lv7_47;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            p_chv_address0 <= ap_const_lv7_45;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            p_chv_address0 <= ap_const_lv7_43;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            p_chv_address0 <= ap_const_lv7_41;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            p_chv_address0 <= ap_const_lv7_3F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            p_chv_address0 <= ap_const_lv7_3D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            p_chv_address0 <= ap_const_lv7_3B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            p_chv_address0 <= ap_const_lv7_39;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            p_chv_address0 <= ap_const_lv7_37;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            p_chv_address0 <= ap_const_lv7_35;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            p_chv_address0 <= ap_const_lv7_33;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            p_chv_address0 <= ap_const_lv7_31;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            p_chv_address0 <= ap_const_lv7_2F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            p_chv_address0 <= ap_const_lv7_2D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            p_chv_address0 <= ap_const_lv7_2B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            p_chv_address0 <= ap_const_lv7_29;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            p_chv_address0 <= ap_const_lv7_27;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            p_chv_address0 <= ap_const_lv7_25;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            p_chv_address0 <= ap_const_lv7_23;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            p_chv_address0 <= ap_const_lv7_21;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            p_chv_address0 <= ap_const_lv7_1F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            p_chv_address0 <= ap_const_lv7_1D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            p_chv_address0 <= ap_const_lv7_1B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            p_chv_address0 <= ap_const_lv7_19;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            p_chv_address0 <= ap_const_lv7_17;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            p_chv_address0 <= ap_const_lv7_15;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p_chv_address0 <= ap_const_lv7_13;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            p_chv_address0 <= ap_const_lv7_11;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            p_chv_address0 <= ap_const_lv7_F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            p_chv_address0 <= ap_const_lv7_D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            p_chv_address0 <= ap_const_lv7_B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            p_chv_address0 <= ap_const_lv7_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p_chv_address0 <= ap_const_lv7_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            p_chv_address0 <= ap_const_lv7_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            p_chv_address0 <= ap_const_lv7_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            p_chv_address0 <= ap_const_lv7_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            p_chv_address0 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address0;
        else 
            p_chv_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_chv_address1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state108, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address1, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            p_chv_address1 <= ap_const_lv7_62;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            p_chv_address1 <= ap_const_lv7_60;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            p_chv_address1 <= ap_const_lv7_5E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            p_chv_address1 <= ap_const_lv7_5C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            p_chv_address1 <= ap_const_lv7_5A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            p_chv_address1 <= ap_const_lv7_58;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            p_chv_address1 <= ap_const_lv7_56;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            p_chv_address1 <= ap_const_lv7_54;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            p_chv_address1 <= ap_const_lv7_52;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            p_chv_address1 <= ap_const_lv7_50;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            p_chv_address1 <= ap_const_lv7_4E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            p_chv_address1 <= ap_const_lv7_4C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            p_chv_address1 <= ap_const_lv7_4A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            p_chv_address1 <= ap_const_lv7_48;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            p_chv_address1 <= ap_const_lv7_46;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            p_chv_address1 <= ap_const_lv7_44;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            p_chv_address1 <= ap_const_lv7_42;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            p_chv_address1 <= ap_const_lv7_40;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            p_chv_address1 <= ap_const_lv7_3E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            p_chv_address1 <= ap_const_lv7_3C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            p_chv_address1 <= ap_const_lv7_3A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            p_chv_address1 <= ap_const_lv7_38;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            p_chv_address1 <= ap_const_lv7_36;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            p_chv_address1 <= ap_const_lv7_34;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            p_chv_address1 <= ap_const_lv7_32;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            p_chv_address1 <= ap_const_lv7_30;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            p_chv_address1 <= ap_const_lv7_2E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            p_chv_address1 <= ap_const_lv7_2C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            p_chv_address1 <= ap_const_lv7_2A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            p_chv_address1 <= ap_const_lv7_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            p_chv_address1 <= ap_const_lv7_26;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            p_chv_address1 <= ap_const_lv7_24;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            p_chv_address1 <= ap_const_lv7_22;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            p_chv_address1 <= ap_const_lv7_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            p_chv_address1 <= ap_const_lv7_1E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            p_chv_address1 <= ap_const_lv7_1C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            p_chv_address1 <= ap_const_lv7_1A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            p_chv_address1 <= ap_const_lv7_18;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            p_chv_address1 <= ap_const_lv7_16;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            p_chv_address1 <= ap_const_lv7_14;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p_chv_address1 <= ap_const_lv7_12;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            p_chv_address1 <= ap_const_lv7_10;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            p_chv_address1 <= ap_const_lv7_E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            p_chv_address1 <= ap_const_lv7_C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            p_chv_address1 <= ap_const_lv7_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            p_chv_address1 <= ap_const_lv7_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p_chv_address1 <= ap_const_lv7_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            p_chv_address1 <= ap_const_lv7_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            p_chv_address1 <= ap_const_lv7_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            p_chv_address1 <= ap_const_lv7_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            p_chv_address1 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_address1;
        else 
            p_chv_address1 <= "XXXXXXX";
        end if; 
    end process;


    p_chv_ce0_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state108, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce0, ap_block_state57_on_subcall_done, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 
    = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) 
    or ((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_boolean_0 = ap_block_state57_on_subcall_done)))) then 
            p_chv_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            p_chv_ce0 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce0;
        else 
            p_chv_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_chv_ce1_assign_proc : process(ap_CS_fsm_state57, ap_CS_fsm_state108, grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce1, ap_block_state57_on_subcall_done, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 
    = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) 
    or ((ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_boolean_0 = ap_block_state57_on_subcall_done)))) then 
            p_chv_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            p_chv_ce1 <= grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_p_chv_ce1;
        else 
            p_chv_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_chv_d0_assign_proc : process(chv_i, ap_CS_fsm_state57, tmp_201_reg_4988, tmp_203_reg_4998, tmp_205_reg_5008, tmp_207_reg_5018, tmp_209_reg_5028, tmp_211_reg_5038, tmp_213_reg_5048, tmp_215_reg_5058, tmp_217_reg_5068, tmp_219_reg_5078, tmp_221_reg_5088, tmp_223_reg_5098, tmp_225_reg_5108, tmp_227_reg_5118, tmp_229_reg_5128, tmp_231_reg_5138, tmp_233_reg_5148, tmp_235_reg_5158, tmp_237_reg_5168, tmp_239_reg_5178, tmp_241_reg_5188, tmp_243_reg_5198, tmp_245_reg_5208, tmp_247_reg_5218, tmp_249_reg_5228, tmp_251_reg_5238, tmp_253_reg_5248, tmp_255_reg_5258, tmp_257_reg_5268, tmp_259_reg_5278, tmp_261_reg_5288, tmp_263_reg_5298, tmp_265_reg_5308, tmp_267_reg_5318, tmp_269_reg_5328, tmp_271_reg_5338, tmp_273_reg_5348, tmp_275_reg_5358, tmp_277_reg_5368, tmp_279_reg_5378, tmp_281_reg_5388, tmp_283_reg_5398, tmp_285_reg_5408, tmp_287_reg_5418, tmp_289_reg_5428, tmp_291_reg_5438, tmp_293_reg_5448, tmp_295_reg_5458, tmp_297_reg_5468, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            p_chv_d0 <= tmp_297_reg_5468;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            p_chv_d0 <= tmp_295_reg_5458;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            p_chv_d0 <= tmp_293_reg_5448;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            p_chv_d0 <= tmp_291_reg_5438;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            p_chv_d0 <= tmp_289_reg_5428;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            p_chv_d0 <= tmp_287_reg_5418;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            p_chv_d0 <= tmp_285_reg_5408;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            p_chv_d0 <= tmp_283_reg_5398;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            p_chv_d0 <= tmp_281_reg_5388;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            p_chv_d0 <= tmp_279_reg_5378;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            p_chv_d0 <= tmp_277_reg_5368;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            p_chv_d0 <= tmp_275_reg_5358;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            p_chv_d0 <= tmp_273_reg_5348;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            p_chv_d0 <= tmp_271_reg_5338;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            p_chv_d0 <= tmp_269_reg_5328;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            p_chv_d0 <= tmp_267_reg_5318;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            p_chv_d0 <= tmp_265_reg_5308;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            p_chv_d0 <= tmp_263_reg_5298;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            p_chv_d0 <= tmp_261_reg_5288;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            p_chv_d0 <= tmp_259_reg_5278;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            p_chv_d0 <= tmp_257_reg_5268;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            p_chv_d0 <= tmp_255_reg_5258;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            p_chv_d0 <= tmp_253_reg_5248;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            p_chv_d0 <= tmp_251_reg_5238;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            p_chv_d0 <= tmp_249_reg_5228;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            p_chv_d0 <= tmp_247_reg_5218;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            p_chv_d0 <= tmp_245_reg_5208;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            p_chv_d0 <= tmp_243_reg_5198;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            p_chv_d0 <= tmp_241_reg_5188;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            p_chv_d0 <= tmp_239_reg_5178;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            p_chv_d0 <= tmp_237_reg_5168;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            p_chv_d0 <= tmp_235_reg_5158;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            p_chv_d0 <= tmp_233_reg_5148;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            p_chv_d0 <= tmp_231_reg_5138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            p_chv_d0 <= tmp_229_reg_5128;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            p_chv_d0 <= tmp_227_reg_5118;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            p_chv_d0 <= tmp_225_reg_5108;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            p_chv_d0 <= tmp_223_reg_5098;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            p_chv_d0 <= tmp_221_reg_5088;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            p_chv_d0 <= tmp_219_reg_5078;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p_chv_d0 <= tmp_217_reg_5068;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            p_chv_d0 <= tmp_215_reg_5058;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            p_chv_d0 <= tmp_213_reg_5048;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            p_chv_d0 <= tmp_211_reg_5038;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            p_chv_d0 <= tmp_209_reg_5028;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            p_chv_d0 <= tmp_207_reg_5018;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p_chv_d0 <= tmp_205_reg_5008;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            p_chv_d0 <= tmp_203_reg_4998;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            p_chv_d0 <= tmp_201_reg_4988;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            p_chv_d0 <= chv_i(1 downto 1);
        else 
            p_chv_d0 <= "X";
        end if; 
    end process;


    p_chv_d1_assign_proc : process(tmp_200_reg_4983, ap_CS_fsm_state57, tmp_202_reg_4993, tmp_204_reg_5003, tmp_206_reg_5013, tmp_208_reg_5023, tmp_210_reg_5033, tmp_212_reg_5043, tmp_214_reg_5053, tmp_216_reg_5063, tmp_218_reg_5073, tmp_220_reg_5083, tmp_222_reg_5093, tmp_224_reg_5103, tmp_226_reg_5113, tmp_228_reg_5123, tmp_230_reg_5133, tmp_232_reg_5143, tmp_234_reg_5153, tmp_236_reg_5163, tmp_238_reg_5173, tmp_240_reg_5183, tmp_242_reg_5193, tmp_244_reg_5203, tmp_246_reg_5213, tmp_248_reg_5223, tmp_250_reg_5233, tmp_252_reg_5243, tmp_254_reg_5253, tmp_256_reg_5263, tmp_258_reg_5273, tmp_260_reg_5283, tmp_262_reg_5293, tmp_264_reg_5303, tmp_266_reg_5313, tmp_268_reg_5323, tmp_270_reg_5333, tmp_272_reg_5343, tmp_274_reg_5353, tmp_276_reg_5363, tmp_278_reg_5373, tmp_280_reg_5383, tmp_282_reg_5393, tmp_284_reg_5403, tmp_286_reg_5413, tmp_288_reg_5423, tmp_290_reg_5433, tmp_292_reg_5443, tmp_294_reg_5453, tmp_296_reg_5463, trunc_ln258_fu_3039_p1, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state106)) then 
            p_chv_d1 <= tmp_296_reg_5463;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state105)) then 
            p_chv_d1 <= tmp_294_reg_5453;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            p_chv_d1 <= tmp_292_reg_5443;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            p_chv_d1 <= tmp_290_reg_5433;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            p_chv_d1 <= tmp_288_reg_5423;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            p_chv_d1 <= tmp_286_reg_5413;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            p_chv_d1 <= tmp_284_reg_5403;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            p_chv_d1 <= tmp_282_reg_5393;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            p_chv_d1 <= tmp_280_reg_5383;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            p_chv_d1 <= tmp_278_reg_5373;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            p_chv_d1 <= tmp_276_reg_5363;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state95)) then 
            p_chv_d1 <= tmp_274_reg_5353;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
            p_chv_d1 <= tmp_272_reg_5343;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            p_chv_d1 <= tmp_270_reg_5333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
            p_chv_d1 <= tmp_268_reg_5323;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state91)) then 
            p_chv_d1 <= tmp_266_reg_5313;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            p_chv_d1 <= tmp_264_reg_5303;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
            p_chv_d1 <= tmp_262_reg_5293;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            p_chv_d1 <= tmp_260_reg_5283;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
            p_chv_d1 <= tmp_258_reg_5273;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            p_chv_d1 <= tmp_256_reg_5263;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            p_chv_d1 <= tmp_254_reg_5253;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            p_chv_d1 <= tmp_252_reg_5243;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            p_chv_d1 <= tmp_250_reg_5233;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            p_chv_d1 <= tmp_248_reg_5223;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            p_chv_d1 <= tmp_246_reg_5213;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            p_chv_d1 <= tmp_244_reg_5203;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            p_chv_d1 <= tmp_242_reg_5193;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            p_chv_d1 <= tmp_240_reg_5183;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            p_chv_d1 <= tmp_238_reg_5173;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            p_chv_d1 <= tmp_236_reg_5163;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            p_chv_d1 <= tmp_234_reg_5153;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            p_chv_d1 <= tmp_232_reg_5143;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            p_chv_d1 <= tmp_230_reg_5133;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            p_chv_d1 <= tmp_228_reg_5123;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            p_chv_d1 <= tmp_226_reg_5113;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            p_chv_d1 <= tmp_224_reg_5103;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            p_chv_d1 <= tmp_222_reg_5093;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            p_chv_d1 <= tmp_220_reg_5083;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            p_chv_d1 <= tmp_218_reg_5073;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p_chv_d1 <= tmp_216_reg_5063;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            p_chv_d1 <= tmp_214_reg_5053;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            p_chv_d1 <= tmp_212_reg_5043;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            p_chv_d1 <= tmp_210_reg_5033;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            p_chv_d1 <= tmp_208_reg_5023;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            p_chv_d1 <= tmp_206_reg_5013;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p_chv_d1 <= tmp_204_reg_5003;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            p_chv_d1 <= tmp_202_reg_4993;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            p_chv_d1 <= tmp_200_reg_4983;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            p_chv_d1 <= trunc_ln258_fu_3039_p1;
        else 
            p_chv_d1 <= "X";
        end if; 
    end process;


    p_chv_we0_assign_proc : process(ap_CS_fsm_state57, and_ln255_fu_3033_p2, ap_block_state57_on_subcall_done, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 
    = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) 
    or ((ap_const_lv1_1 = and_ln255_fu_3033_p2) and (ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_boolean_0 = ap_block_state57_on_subcall_done)))) then 
            p_chv_we0 <= ap_const_logic_1;
        else 
            p_chv_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_chv_we1_assign_proc : process(ap_CS_fsm_state57, and_ln255_fu_3033_p2, ap_block_state57_on_subcall_done, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, ap_CS_fsm_state81, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86, ap_CS_fsm_state87, ap_CS_fsm_state88, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state91, ap_CS_fsm_state92, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state103, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state106)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state92) or (ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 
    = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) 
    or ((ap_const_lv1_1 = and_ln255_fu_3033_p2) and (ap_const_logic_1 = ap_CS_fsm_state57) and (ap_const_boolean_0 = ap_block_state57_on_subcall_done)))) then 
            p_chv_we1 <= ap_const_logic_1;
        else 
            p_chv_we1 <= ap_const_logic_0;
        end if; 
    end process;


    p_lhv_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_lhv_address0 <= ap_const_lv7_63;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_lhv_address0 <= ap_const_lv7_61;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_lhv_address0 <= ap_const_lv7_5F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_lhv_address0 <= ap_const_lv7_5D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_lhv_address0 <= ap_const_lv7_5B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_lhv_address0 <= ap_const_lv7_59;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_lhv_address0 <= ap_const_lv7_57;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_lhv_address0 <= ap_const_lv7_55;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_lhv_address0 <= ap_const_lv7_53;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_lhv_address0 <= ap_const_lv7_51;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_lhv_address0 <= ap_const_lv7_4F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_lhv_address0 <= ap_const_lv7_4D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_lhv_address0 <= ap_const_lv7_4B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_lhv_address0 <= ap_const_lv7_49;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_lhv_address0 <= ap_const_lv7_47;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_lhv_address0 <= ap_const_lv7_45;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_lhv_address0 <= ap_const_lv7_43;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_lhv_address0 <= ap_const_lv7_41;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_lhv_address0 <= ap_const_lv7_3F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_lhv_address0 <= ap_const_lv7_3D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_lhv_address0 <= ap_const_lv7_3B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_lhv_address0 <= ap_const_lv7_39;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_lhv_address0 <= ap_const_lv7_37;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_lhv_address0 <= ap_const_lv7_35;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_lhv_address0 <= ap_const_lv7_33;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_lhv_address0 <= ap_const_lv7_31;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_lhv_address0 <= ap_const_lv7_2F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_lhv_address0 <= ap_const_lv7_2D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_lhv_address0 <= ap_const_lv7_2B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_lhv_address0 <= ap_const_lv7_29;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_lhv_address0 <= ap_const_lv7_27;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_lhv_address0 <= ap_const_lv7_25;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_lhv_address0 <= ap_const_lv7_23;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_lhv_address0 <= ap_const_lv7_21;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_lhv_address0 <= ap_const_lv7_1F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_lhv_address0 <= ap_const_lv7_1D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_lhv_address0 <= ap_const_lv7_1B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_lhv_address0 <= ap_const_lv7_19;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_lhv_address0 <= ap_const_lv7_17;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_lhv_address0 <= ap_const_lv7_15;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_lhv_address0 <= ap_const_lv7_13;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_lhv_address0 <= ap_const_lv7_11;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_lhv_address0 <= ap_const_lv7_F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_lhv_address0 <= ap_const_lv7_D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_lhv_address0 <= ap_const_lv7_B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_lhv_address0 <= ap_const_lv7_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_lhv_address0 <= ap_const_lv7_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_lhv_address0 <= ap_const_lv7_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lhv_address0 <= ap_const_lv7_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_lhv_address0 <= ap_const_lv7_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_lhv_address0 <= grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address0;
        else 
            p_lhv_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_lhv_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_lhv_address1 <= ap_const_lv7_62;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_lhv_address1 <= ap_const_lv7_60;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_lhv_address1 <= ap_const_lv7_5E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_lhv_address1 <= ap_const_lv7_5C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_lhv_address1 <= ap_const_lv7_5A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_lhv_address1 <= ap_const_lv7_58;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_lhv_address1 <= ap_const_lv7_56;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_lhv_address1 <= ap_const_lv7_54;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_lhv_address1 <= ap_const_lv7_52;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_lhv_address1 <= ap_const_lv7_50;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_lhv_address1 <= ap_const_lv7_4E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_lhv_address1 <= ap_const_lv7_4C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_lhv_address1 <= ap_const_lv7_4A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_lhv_address1 <= ap_const_lv7_48;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_lhv_address1 <= ap_const_lv7_46;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_lhv_address1 <= ap_const_lv7_44;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_lhv_address1 <= ap_const_lv7_42;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_lhv_address1 <= ap_const_lv7_40;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_lhv_address1 <= ap_const_lv7_3E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_lhv_address1 <= ap_const_lv7_3C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_lhv_address1 <= ap_const_lv7_3A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_lhv_address1 <= ap_const_lv7_38;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_lhv_address1 <= ap_const_lv7_36;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_lhv_address1 <= ap_const_lv7_34;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_lhv_address1 <= ap_const_lv7_32;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_lhv_address1 <= ap_const_lv7_30;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_lhv_address1 <= ap_const_lv7_2E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_lhv_address1 <= ap_const_lv7_2C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_lhv_address1 <= ap_const_lv7_2A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_lhv_address1 <= ap_const_lv7_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_lhv_address1 <= ap_const_lv7_26;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_lhv_address1 <= ap_const_lv7_24;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_lhv_address1 <= ap_const_lv7_22;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_lhv_address1 <= ap_const_lv7_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_lhv_address1 <= ap_const_lv7_1E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_lhv_address1 <= ap_const_lv7_1C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_lhv_address1 <= ap_const_lv7_1A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_lhv_address1 <= ap_const_lv7_18;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_lhv_address1 <= ap_const_lv7_16;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_lhv_address1 <= ap_const_lv7_14;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_lhv_address1 <= ap_const_lv7_12;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_lhv_address1 <= ap_const_lv7_10;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_lhv_address1 <= ap_const_lv7_E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_lhv_address1 <= ap_const_lv7_C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_lhv_address1 <= ap_const_lv7_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_lhv_address1 <= ap_const_lv7_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_lhv_address1 <= ap_const_lv7_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_lhv_address1 <= ap_const_lv7_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lhv_address1 <= ap_const_lv7_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_lhv_address1 <= ap_const_lv7_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_lhv_address1 <= grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_address1;
        else 
            p_lhv_address1 <= "XXXXXXX";
        end if; 
    end process;


    p_lhv_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_lhv_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_lhv_ce0 <= grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce0;
        else 
            p_lhv_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_lhv_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state52, grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_lhv_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            p_lhv_ce1 <= grp_bind_ap_uint_1_100_s_fu_1335_p_lhv_ce1;
        else 
            p_lhv_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_lhv_d0_assign_proc : process(ap_CS_fsm_state1, lhv_i, tmp_102_reg_4482, tmp_104_reg_4492, tmp_106_reg_4502, tmp_108_reg_4512, tmp_110_reg_4522, tmp_112_reg_4532, tmp_114_reg_4542, tmp_116_reg_4552, tmp_118_reg_4562, tmp_120_reg_4572, tmp_122_reg_4582, tmp_124_reg_4592, tmp_126_reg_4602, tmp_128_reg_4612, tmp_130_reg_4622, tmp_132_reg_4632, tmp_134_reg_4642, tmp_136_reg_4652, tmp_138_reg_4662, tmp_140_reg_4672, tmp_142_reg_4682, tmp_144_reg_4692, tmp_146_reg_4702, tmp_148_reg_4712, tmp_150_reg_4722, tmp_152_reg_4732, tmp_154_reg_4742, tmp_156_reg_4752, tmp_158_reg_4762, tmp_160_reg_4772, tmp_162_reg_4782, tmp_164_reg_4792, tmp_166_reg_4802, tmp_168_reg_4812, tmp_170_reg_4822, tmp_172_reg_4832, tmp_174_reg_4842, tmp_176_reg_4852, tmp_178_reg_4862, tmp_180_reg_4872, tmp_182_reg_4882, tmp_184_reg_4892, tmp_186_reg_4902, tmp_188_reg_4912, tmp_190_reg_4922, tmp_192_reg_4932, tmp_194_reg_4942, tmp_196_reg_4952, tmp_198_reg_4962, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_lhv_d0 <= tmp_198_reg_4962;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_lhv_d0 <= tmp_196_reg_4952;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_lhv_d0 <= tmp_194_reg_4942;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_lhv_d0 <= tmp_192_reg_4932;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_lhv_d0 <= tmp_190_reg_4922;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_lhv_d0 <= tmp_188_reg_4912;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_lhv_d0 <= tmp_186_reg_4902;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_lhv_d0 <= tmp_184_reg_4892;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_lhv_d0 <= tmp_182_reg_4882;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_lhv_d0 <= tmp_180_reg_4872;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_lhv_d0 <= tmp_178_reg_4862;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_lhv_d0 <= tmp_176_reg_4852;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_lhv_d0 <= tmp_174_reg_4842;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_lhv_d0 <= tmp_172_reg_4832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_lhv_d0 <= tmp_170_reg_4822;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_lhv_d0 <= tmp_168_reg_4812;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_lhv_d0 <= tmp_166_reg_4802;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_lhv_d0 <= tmp_164_reg_4792;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_lhv_d0 <= tmp_162_reg_4782;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_lhv_d0 <= tmp_160_reg_4772;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_lhv_d0 <= tmp_158_reg_4762;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_lhv_d0 <= tmp_156_reg_4752;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_lhv_d0 <= tmp_154_reg_4742;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_lhv_d0 <= tmp_152_reg_4732;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_lhv_d0 <= tmp_150_reg_4722;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_lhv_d0 <= tmp_148_reg_4712;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_lhv_d0 <= tmp_146_reg_4702;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_lhv_d0 <= tmp_144_reg_4692;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_lhv_d0 <= tmp_142_reg_4682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_lhv_d0 <= tmp_140_reg_4672;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_lhv_d0 <= tmp_138_reg_4662;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_lhv_d0 <= tmp_136_reg_4652;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_lhv_d0 <= tmp_134_reg_4642;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_lhv_d0 <= tmp_132_reg_4632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_lhv_d0 <= tmp_130_reg_4622;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_lhv_d0 <= tmp_128_reg_4612;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_lhv_d0 <= tmp_126_reg_4602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_lhv_d0 <= tmp_124_reg_4592;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_lhv_d0 <= tmp_122_reg_4582;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_lhv_d0 <= tmp_120_reg_4572;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_lhv_d0 <= tmp_118_reg_4562;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_lhv_d0 <= tmp_116_reg_4552;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_lhv_d0 <= tmp_114_reg_4542;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_lhv_d0 <= tmp_112_reg_4532;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_lhv_d0 <= tmp_110_reg_4522;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_lhv_d0 <= tmp_108_reg_4512;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_lhv_d0 <= tmp_106_reg_4502;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_lhv_d0 <= tmp_104_reg_4492;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lhv_d0 <= tmp_102_reg_4482;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_lhv_d0 <= lhv_i(1 downto 1);
        else 
            p_lhv_d0 <= "X";
        end if; 
    end process;


    p_lhv_d1_assign_proc : process(ap_CS_fsm_state1, tmp_101_reg_4477, tmp_103_reg_4487, tmp_105_reg_4497, tmp_107_reg_4507, tmp_109_reg_4517, tmp_111_reg_4527, tmp_113_reg_4537, tmp_115_reg_4547, tmp_117_reg_4557, tmp_119_reg_4567, tmp_121_reg_4577, tmp_123_reg_4587, tmp_125_reg_4597, tmp_127_reg_4607, tmp_129_reg_4617, tmp_131_reg_4627, tmp_133_reg_4637, tmp_135_reg_4647, tmp_137_reg_4657, tmp_139_reg_4667, tmp_141_reg_4677, tmp_143_reg_4687, tmp_145_reg_4697, tmp_147_reg_4707, tmp_149_reg_4717, tmp_151_reg_4727, tmp_153_reg_4737, tmp_155_reg_4747, tmp_157_reg_4757, tmp_159_reg_4767, tmp_161_reg_4777, tmp_163_reg_4787, tmp_165_reg_4797, tmp_167_reg_4807, tmp_169_reg_4817, tmp_171_reg_4827, tmp_173_reg_4837, tmp_175_reg_4847, tmp_177_reg_4857, tmp_179_reg_4867, tmp_181_reg_4877, tmp_183_reg_4887, tmp_185_reg_4897, tmp_187_reg_4907, tmp_189_reg_4917, tmp_191_reg_4927, tmp_193_reg_4937, tmp_195_reg_4947, tmp_197_reg_4957, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, trunc_ln197_fu_2205_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            p_lhv_d1 <= tmp_197_reg_4957;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            p_lhv_d1 <= tmp_195_reg_4947;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            p_lhv_d1 <= tmp_193_reg_4937;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            p_lhv_d1 <= tmp_191_reg_4927;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            p_lhv_d1 <= tmp_189_reg_4917;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            p_lhv_d1 <= tmp_187_reg_4907;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_lhv_d1 <= tmp_185_reg_4897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            p_lhv_d1 <= tmp_183_reg_4887;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            p_lhv_d1 <= tmp_181_reg_4877;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_lhv_d1 <= tmp_179_reg_4867;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            p_lhv_d1 <= tmp_177_reg_4857;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_lhv_d1 <= tmp_175_reg_4847;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            p_lhv_d1 <= tmp_173_reg_4837;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            p_lhv_d1 <= tmp_171_reg_4827;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            p_lhv_d1 <= tmp_169_reg_4817;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            p_lhv_d1 <= tmp_167_reg_4807;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            p_lhv_d1 <= tmp_165_reg_4797;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            p_lhv_d1 <= tmp_163_reg_4787;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            p_lhv_d1 <= tmp_161_reg_4777;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            p_lhv_d1 <= tmp_159_reg_4767;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            p_lhv_d1 <= tmp_157_reg_4757;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p_lhv_d1 <= tmp_155_reg_4747;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p_lhv_d1 <= tmp_153_reg_4737;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_lhv_d1 <= tmp_151_reg_4727;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p_lhv_d1 <= tmp_149_reg_4717;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            p_lhv_d1 <= tmp_147_reg_4707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            p_lhv_d1 <= tmp_145_reg_4697;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            p_lhv_d1 <= tmp_143_reg_4687;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            p_lhv_d1 <= tmp_141_reg_4677;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            p_lhv_d1 <= tmp_139_reg_4667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_lhv_d1 <= tmp_137_reg_4657;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_lhv_d1 <= tmp_135_reg_4647;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            p_lhv_d1 <= tmp_133_reg_4637;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            p_lhv_d1 <= tmp_131_reg_4627;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            p_lhv_d1 <= tmp_129_reg_4617;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p_lhv_d1 <= tmp_127_reg_4607;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_lhv_d1 <= tmp_125_reg_4597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p_lhv_d1 <= tmp_123_reg_4587;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_lhv_d1 <= tmp_121_reg_4577;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_lhv_d1 <= tmp_119_reg_4567;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_lhv_d1 <= tmp_117_reg_4557;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_lhv_d1 <= tmp_115_reg_4547;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_lhv_d1 <= tmp_113_reg_4537;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_lhv_d1 <= tmp_111_reg_4527;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_lhv_d1 <= tmp_109_reg_4517;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_lhv_d1 <= tmp_107_reg_4507;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_lhv_d1 <= tmp_105_reg_4497;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_lhv_d1 <= tmp_103_reg_4487;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lhv_d1 <= tmp_101_reg_4477;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            p_lhv_d1 <= trunc_ln197_fu_2205_p1;
        else 
            p_lhv_d1 <= "X";
        end if; 
    end process;


    p_lhv_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_lhv_we0 <= ap_const_logic_1;
        else 
            p_lhv_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_lhv_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, sdata_i_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 
    = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_start 
    = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            p_lhv_we1 <= ap_const_logic_1;
        else 
            p_lhv_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pred_class_o <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_pred_class_o),5));

    sdata_i_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, sdata_i_TVALID_int_regslice)
    begin
        if (((tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            sdata_i_TDATA_blk_n <= sdata_i_TVALID_int_regslice;
        else 
            sdata_i_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sdata_i_TREADY <= regslice_both_sdata_i_V_data_V_U_ack_in;

    sdata_i_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_nbreadreq_fu_928_p9, sdata_i_TVALID_int_regslice)
    begin
        if ((not(((ap_start = ap_const_logic_0) or ((sdata_i_TVALID_int_regslice = ap_const_logic_0) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1)))) and (tmp_nbreadreq_fu_928_p9 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            sdata_i_TREADY_int_regslice <= ap_const_logic_1;
        else 
            sdata_i_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln7_1_fu_3886_p3 <= 
        similarity_classes_1 when (icmp_ln7_1_fu_3881_p2(0) = '1') else 
        select_ln7_fu_3873_p3;
    select_ln7_fu_3873_p3 <= 
        similarity_classes_0 when (icmp_ln7_fu_3868_p2(0) = '1') else 
        similarity_classes_2;
        sext_ln268_fu_3846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_similarity_phase1_ap_uint_1_100_ap_uint_32_ap_uint_32_s_fu_1366_ap_return),32));

    status_o <= ap_const_lv5_0;
    tmp_nbreadreq_fu_928_p9 <= (0=>(sdata_i_TVALID_int_regslice), others=>'-');
    trunc_ln177_fu_1407_p1 <= bhv_i(1 - 1 downto 0);
    trunc_ln197_fu_2205_p1 <= lhv_i(1 - 1 downto 0);
    trunc_ln258_fu_3039_p1 <= chv_i(1 - 1 downto 0);
end behav;
